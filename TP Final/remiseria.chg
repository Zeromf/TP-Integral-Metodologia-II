"11:28:40 a.m., miércoles, 28 de octubre de 2020: Dolphin Smalltalk Professional started"!

"11:29:32 a.m., miércoles, 28 de octubre de 2020: Image saved"!

"11:29:35 a.m., miércoles, 28 de octubre de 2020: Image saved"!

"11:31:07 a.m., miércoles, 28 de octubre de 2020: Dolphin Smalltalk Professional started"!

!Remiseria methodsFor!
todosLosChoferes
"Retorna la lista de los choferes"
^lista_chofer.! !
!Remiseria categoriesFor: #todosLosChoferes!public! !

!Remiseria methodsFor!
todosLosClientes
"Retorna la lista de clientes"
^lista_clientes.! !
!Remiseria categoriesFor: #todosLosClientes!public! !

"11:33:51 a.m., miércoles, 28 de octubre de 2020: Image saved"!

"11:33:54 a.m., miércoles, 28 de octubre de 2020: Image saved"!

"11:33:57 a.m., miércoles, 28 de octubre de 2020: Image saved"!

"04:13:40 p.m., miércoles, 28 de octubre de 2020: Dolphin Smalltalk Professional started"!

Object subclass: #Persona
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Persona guid: (GUID fromString: '{C6AE47F5-B04D-4702-99B2-8586C4DCD592}')!
Persona comment: ''!
!Persona categoriesForClass!Kernel-Objects! !
Object subclass: #Persona
	instanceVariableNames: 'nombre'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #Persona
	instanceVariableNames: 'nombre direccion'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #Persona
	instanceVariableNames: 'nombre direccion telefono'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #Persona
	instanceVariableNames: 'nombre direccion telefono dni'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

!Persona methodsFor!
iniPersonaNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni

nombre:=unNombre.
direccion:=unaDireccion.
telefono:=unTelefono.
dni:=unDni.! !
!Persona categoriesFor: #iniPersonaNom:dir:tel:dni:!public! !

!Persona methodsFor!
iniPersonaNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni
"Inicializa una instancia de persona, sus clases hijos llamaran este metodo"
nombre:=unNombre.
direccion:=unaDireccion.
telefono:=unTelefono.
dni:=unDni.! !
!Persona categoriesFor: #iniPersonaNom:dir:tel:dni:!public! !

!Persona methodsFor!
verNombre
"Retorna el nombre de la persona"
^nombre.! !
!Persona categoriesFor: #verNombre!public! !

!Persona methodsFor!
verDireccion
"Retorna la direccion de una persona"
^direccion.! !
!Persona categoriesFor: #verDireccion!public! !

!Persona methodsFor!
verTelefono
"Retorna el telefono de una persona"
^telefono.! !
!Persona categoriesFor: #verTelefono!public! !

!Persona methodsFor!
verDni
"Retorna el dni de una persona"
^dni.! !
!Persona categoriesFor: #verDni!public! !

!Persona class methodsFor!
crearPersonaNom: unNom ! !
!Persona class categoriesFor: #crearPersonaNom:!public! !

!Persona class methodsFor!
crearPersonaNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni

^(self new ) iniPersonaNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni.! !
!Persona class categoriesFor: #crearPersonaNom:dir:tel:dni:!public! !

Persona class removeSelector: #crearPersonaNom: ifAbsent: []!

!Persona class methodsFor!
crearPersonaNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni
"En duda probar si funciona asi o si no hace falta este metodo"
^(self new ) iniPersonaNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni.! !
!Persona class categoriesFor: #crearPersonaNom:dir:tel:dni:!public! !

!Persona methodsFor!
modiNombre: unNom
"Modifica el nombre de una persona"
nombre:=unNom.! !
!Persona categoriesFor: #modiNombre:!public! !

!Persona methodsFor!
modiDireccion: unaDir
"Modifica la direccion de una persona"
direccion:=unaDir.! !
!Persona categoriesFor: #modiDireccion:!public! !

!Persona methodsFor!
modiTelefono: unTel
"Mofica el telefono"
telefono:=unTel.! !
!Persona categoriesFor: #modiTelefono:!public! !

Persona class removeSelector: #crearPersonaNom:dir:tel:dni: ifAbsent: []!

Persona subclass: #Chofer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Chofer guid: (GUID fromString: '{76281269-866C-4DA9-98DC-C0BD467FD79B}')!
Chofer comment: ''!
!Chofer categoriesForClass!Kernel-Objects! !
!Chofer class methodsFor!
crearChoferNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo reg:unRegistro

^(self new) iniChoferNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo reg:unRegistro.! !
!Chofer class categoriesFor: #crearChoferNom:dir:tel:dni:cod:reg:!public! !

!Chofer methodsFor!
iniChoferNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo reg:unRegistro
super iniPersonaNom: unNombre dir: unaDireccion tel: unTelefono dni: unDni! !
!Chofer categoriesFor: #iniChoferNom:dir:tel:dni:cod:reg:!public! !

Persona subclass: #Chofer
	instanceVariableNames: 'codigo'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Persona subclass: #Chofer
	instanceVariableNames: 'codigo disponible'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Persona subclass: #Chofer
	instanceVariableNames: 'codigo disponible registro'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

!Chofer methodsFor!
iniChoferNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo reg:unRegistro
super iniPersonaNom: unNombre dir: unaDireccion tel: unTelefono dni: unDni.
codigo:=unCodigo.
registro:=unRegistro.
disponible:=true.
! !
!Chofer categoriesFor: #iniChoferNom:dir:tel:dni:cod:reg:!public! !

c:= Chofer crearChoferNom: 'Pepe' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.

c inspect.!

|c |

c:= Chofer crearChoferNom: 'Pepe' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.

(c verNombre) inspect.!

!Chofer methodsFor!
verDisponibilidad
"Retorna true si el chofer esta disponible"
^disponible.! !
!Chofer categoriesFor: #verDisponibilidad!public! !

|c |

c:= Chofer crearChoferNom: 'Pepe' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.

(c verNombre) inspect.
(c verDisponibilidad) inspect.!

!Chofer methodsFor!
verCodigo
"Retorna el codigo del chofer"
^codigo.! !
!Chofer categoriesFor: #verCodigo!public! !

!Chofer methodsFor!
verRegistro
"Retorna el registro del chofer"
^registro.! !
!Chofer categoriesFor: #verRegistro!public! !

Persona subclass: #Cliente
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Cliente guid: (GUID fromString: '{71C341BF-6F5E-4E57-865F-0B2A4740A73A}')!
Cliente comment: ''!
!Cliente categoriesForClass!Kernel-Objects! !
Persona subclass: #Cliente
	instanceVariableNames: 'codigo_cliente'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

!Cliente class methodsFor!
crearClienteNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo
^(self new) iniClienteNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo.! !
!Cliente class categoriesFor: #crearClienteNom:dir:tel:dni:cod:!public! !

!Cliente methodsFor!
iniClienteNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo
super iniPersonaNom: unNombre dir: unaDireccion tel: unTelefono dni: unDni.
codigo_cliente:=unCodigo.! !
!Cliente categoriesFor: #iniClienteNom:dir:tel:dni:cod:!public! !

!Chofer class methodsFor!
crearChoferNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo reg:unRegistro
"Crea una instancia de chofer"
^(self new) iniChoferNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo reg:unRegistro.! !
!Chofer class categoriesFor: #crearChoferNom:dir:tel:dni:cod:reg:!public! !

!Cliente class methodsFor!
crearClienteNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo
"Crea una instancia de cliente"
^(self new) iniClienteNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo.! !
!Cliente class categoriesFor: #crearClienteNom:dir:tel:dni:cod:!public! !

!Chofer class methodsFor!
crearChoferNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo reg:unRegistro
"Retorna una instancia de chofer inicializada"
^(self new) iniChoferNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo reg:unRegistro.! !
!Chofer class categoriesFor: #crearChoferNom:dir:tel:dni:cod:reg:!public! !

!Chofer methodsFor!
iniChoferNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo reg:unRegistro
"Crea una instancia de chofer"
super iniPersonaNom: unNombre dir: unaDireccion tel: unTelefono dni: unDni.
codigo:=unCodigo.
registro:=unRegistro.
disponible:=true.
! !
!Chofer categoriesFor: #iniChoferNom:dir:tel:dni:cod:reg:!public! !

!Cliente methodsFor!
iniClienteNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo
"Inicializa una instancia de cliente"
super iniPersonaNom: unNombre dir: unaDireccion tel: unTelefono dni: unDni.
codigo_cliente:=unCodigo.! !
!Cliente categoriesFor: #iniClienteNom:dir:tel:dni:cod:!public! !

!Cliente class methodsFor!
crearClienteNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo
"Retorna una instancia inicializada de cliente"
^(self new) iniClienteNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo.! !
!Cliente class categoriesFor: #crearClienteNom:dir:tel:dni:cod:!public! !

!Cliente methodsFor!
verCodigoCliente
"Retorna el codigo del cliente"
^codigo_cliente.! !
!Cliente categoriesFor: #verCodigoCliente!public! !

Persona subclass: #Recepcionista
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Recepcionista guid: (GUID fromString: '{CA762A3F-4C55-4415-8E4B-0C7C7C63AFC6}')!
Recepcionista comment: ''!
!Recepcionista categoriesForClass!Kernel-Objects! !
Persona subclass: #Recepcionista
	instanceVariableNames: 'horario_laboral'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Persona subclass: #Recepcionista
	instanceVariableNames: 'horario_laboral codigo_recep'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

!Recepcionista class methodsFor!
crearRecepcionistaNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo hora:unaHorario
"Retorna una instancia de recepcionista inicializada"
^(self new) iniRecepcionistaNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo hora:unaHorario.! !
!Recepcionista class categoriesFor: #crearRecepcionistaNom:dir:tel:dni:cod:hora:!public! !

!Recepcionista methodsFor!
iniRecepcionistaNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo hora:unaHorario
"Inicializa una instancia de recepcionista"
super iniPersonaNom: unNombre dir: unaDireccion tel: unTelefono dni: unDni.
codigo_recep:=unCodigo.
horario_laboral:=unaHorario.! !
!Recepcionista categoriesFor: #iniRecepcionistaNom:dir:tel:dni:cod:hora:!public! !

!Recepcionista methodsFor!
verCodigo_recep
"Retorna el codigo de la recepcionista"
^codigo_recep.! !
!Recepcionista categoriesFor: #verCodigo_recep!public! !

!Recepcionista methodsFor!
verHorario
"Retorna el horario laboral de la recepcionista"
^horario_laboral.! !
!Recepcionista categoriesFor: #verHorario!public! !

!Recepcionista methodsFor!
modiHorario: unHorario
"Modofica el horario laboral"
horario_laboral:=unHorario.! !
!Recepcionista categoriesFor: #modiHorario:!public! !

"05:52:51 p.m., miércoles, 28 de octubre de 2020: Image saved"!

|c cl r|

c:= Chofer crearChoferNom: 'Pepe' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.

(c verNombre) inspect.
(c verDisponibilidad) inspect.

cl:= Cliente crearClienteNom: 'Nico' dir: 'mi casa' tel: '42387458' dni: '78945217' cod: 01.
cl inspect.

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'su casa' tel: '47841257' dni: '789456123' cod: 01 hora: '8 12'.
r inspect.!

|remi c cl r|


c:= Chofer crearChoferNom: 'Pepe' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.

(c verNombre) inspect.

cl:= Cliente crearClienteNom: 'Nico' dir: 'mi casa' tel: '42387458' dni: '78945217' cod: 01.
cl inspect.

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'su casa' tel: '47841257' dni: '789456123' cod: 01 hora: '8 12'.
r inspect.

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.
remi inspect. !

!Remiseria methodsFor!
agregarChofer: unChofer
"Agrega un chofer a la remiseria"
lista_chofer add: unChofer.! !
!Remiseria categoriesFor: #agregarChofer:!public! !

!Remiseria methodsFor!
eliminarChofer: unChofer
"Elimina un chofer de la remiseria"
lista_chofer remove: unChofer.! !
!Remiseria categoriesFor: #eliminarChofer:!public! !

!Remiseria methodsFor!
existeChofer: unChofer
"Retorna true si el chofer existe en el remiseria, retorna false en caso contrario"
lista_chofer includes: unChofer.! !
!Remiseria categoriesFor: #existeChofer:!public! !

!Remiseria methodsFor!
agregarCliente: unCliente
"Agrega un cliente a la remiseria"
lista_clientes add: unCliente.! !
!Remiseria categoriesFor: #agregarCliente:!public! !

!Remiseria methodsFor!
eliminarCliente: unCliente
"Elimina un cliente de la remiseria"
lista_clientes remove: unCliente.! !
!Remiseria categoriesFor: #eliminarCliente:!public! !

!Remiseria methodsFor!
existeCliente: unCliente
"Retorna true si existe el cliente en la remiseria, false en caso contrario"
lista_clientes includes: unCliente.! !
!Remiseria categoriesFor: #existeCliente:!public! !

!Chofer methodsFor!
modiDisponibilidad
"Modifica el estado del chofer"
disponible:= disponible not.! !
!Chofer categoriesFor: #modiDisponibilidad!public! !

!Chofer methodsFor!
modiRegistro: unreg
"Modifica el registro del chofer"
registro:= unreg. ! !
!Chofer categoriesFor: #modiRegistro:!public! !

Persona subclass: #Chofer
	instanceVariableNames: 'codigo disponible registro auto'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

!Chofer methodsFor!
verAuto
"Retorna auto"
^auto.! !
!Chofer categoriesFor: #verAuto!public! !

!Chofer methodsFor!
agregarAuto: unAuto
"Agrega o modifica un auto al chofer"
auto:=unAuto.! !
!Chofer categoriesFor: #agregarAuto:!public! !

Object subclass: #Auto
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Auto guid: (GUID fromString: '{18D22FD2-058F-493F-8753-033253D5886D}')!
Auto comment: ''!
!Auto categoriesForClass!Kernel-Objects! !
Object subclass: #Auto
	instanceVariableNames: 'patente'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #Auto
	instanceVariableNames: 'patente color'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #Auto
	instanceVariableNames: 'patente color modelo'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #Auto
	instanceVariableNames: 'patente color modelo codigo_auto'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

!Auto class methodsFor!
crearAutoPatente: unaPatente col:unColor mod:unModelo cod:unCodigo
"Retorna una instancia de auto inicializada"
^(self new) iniAutoPatente: unaPatente col:unColor mod:unModelo cod:unCodigo.! !
!Auto class categoriesFor: #crearAutoPatente:col:mod:cod:!public! !

!Auto methodsFor!
iniAutoPatente: unaPatente col:unColor mod:unModelo cod:unCodigo
"Inicializa una instancia de auto"
patente:=unaPatente.
color:=unColor.
modelo:=unModelo.
codigo_auto:=unCodigo.! !
!Auto categoriesFor: #iniAutoPatente:col:mod:cod:!public! !

!Auto methodsFor!
verPatente
"Retorna la patente del auto"
^patente.! !
!Auto categoriesFor: #verPatente!public! !

!Auto methodsFor!
verColor
"Retorna el color del auto"
^color.! !
!Auto categoriesFor: #verColor!public! !

!Auto methodsFor!
verModelo
"Retorna el modelo del auto"
^modelo.! !
!Auto categoriesFor: #verModelo!public! !

!Auto methodsFor!
verCodigo_auto
"Retorna el codigo del auto"
^codigo_auto.! !
!Auto categoriesFor: #verCodigo_auto!public! !

!Auto methodsFor!
modiColor: unColor
"Modifica el color del auto en caso de que sea pintado"
color:=unColor.! !
!Auto categoriesFor: #modiColor:!public! !

"07:06:09 p.m., miércoles, 28 de octubre de 2020: Image saved"!

Persona subclass: #Recepcionista
	instanceVariableNames: 'horario_laboral codigo_recep agenda'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

!Recepcionista methodsFor!
agregarAgenda: unaAgenda
"Agrega una agenda a recepcionista"
agenda:=unaAgenda.! !
!Recepcionista categoriesFor: #agregarAgenda:!public! !

!Recepcionista methodsFor!
verAgenda
"Retorna agenda"
^agenda.! !
!Recepcionista categoriesFor: #verAgenda!public! !

Object subclass: #Agenda
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Agenda guid: (GUID fromString: '{67691D7D-7512-464E-848C-93743BF88BFF}')!
Agenda comment: ''!
!Agenda categoriesForClass!Kernel-Objects! !
Object subclass: #Agenda
	instanceVariableNames: 'viaje'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #Agenda
	instanceVariableNames: 'viaje reserva'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #Agenda
	instanceVariableNames: 'viaje reserva codigo_agenda'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

!Agenda class methodsFor!
crearAgendaCod: unCodigo
"Retorna una instancia de agenda inicializada"
^(self new) iniAgendaCod: unCodigo.! !
!Agenda class categoriesFor: #crearAgendaCod:!public! !

!Agenda methodsFor!
iniAgendaCod: unCodigo
"Inicializa una instancia de agenda"
codigo_agenda:=unCodigo.! !
!Agenda categoriesFor: #iniAgendaCod:!public! !

Object subclass: #Agenda
	instanceVariableNames: 'lista_viajes reserva codigo_agenda'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #Agenda
	instanceVariableNames: 'lista_viajes codigo_agenda'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #Agenda
	instanceVariableNames: 'codigo_agenda'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #Agenda
	instanceVariableNames: 'codigo_agenda lista_viajes'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #Agenda
	instanceVariableNames: 'codigo_agenda lista_viajes lista_reservas'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

!Agenda methodsFor!
iniAgendaCod: unCodigo
"Inicializa una instancia de agenda"
codigo_agenda:=unCodigo.
lista_viajes:= OrderedCollection new.
lista_reservas:= OrderedCollection new.! !
!Agenda categoriesFor: #iniAgendaCod:!public! !

!Agenda methodsFor!
verCodigo_agenda
"Retorna el codigo de la agenda"
^codigo_agenda.! !
!Agenda categoriesFor: #verCodigo_agenda!public! !

!Agenda methodsFor!
agregarViaje: unViaje
"Agrega un viaje a la agenda"
lista_viajes add: unViaje.! !
!Agenda categoriesFor: #agregarViaje:!public! !

!Agenda methodsFor!
eliminarViaje: unViaje
"Elimina un viaje de la agenda"
lista_viajes remove: unViaje.! !
!Agenda categoriesFor: #eliminarViaje:!public! !

!Agenda methodsFor!
existeViaje: unViaje
"Retorna true si el viaje esta en la agenda, false en caso contrario"
^ lista_viajes includes: unViaje.! !
!Agenda categoriesFor: #existeViaje:!public! !

!Remiseria methodsFor!
existeChofer: unChofer
"Retorna true si el chofer existe en el remiseria, retorna false en caso contrario"
^lista_chofer includes: unChofer.! !
!Remiseria categoriesFor: #existeChofer:!public! !

!Remiseria methodsFor!
existeCliente: unCliente
"Retorna true si existe el cliente en la remiseria, false en caso contrario"
^lista_clientes includes: unCliente.! !
!Remiseria categoriesFor: #existeCliente:!public! !

!Agenda methodsFor!
agregarReserva: unaReserva
"Agrega una reserva a la agenda"
lista_reservas add: unaReserva.! !
!Agenda categoriesFor: #agregarReserva:!public! !

!Agenda methodsFor!
eliminarReserva: unaReserva
"Elimina una reserva de la agenda"
lista_reservas remove: unaReserva.! !
!Agenda categoriesFor: #eliminarReserva:!public! !

!Agenda methodsFor!
existeReserva: unaReserva
"Retorna true si la reserva esta en la agenda, false en caso contrario"
^lista_reservas includes: unaReserva.! !
!Agenda categoriesFor: #existeReserva:!public! !

Object subclass: #Viaje
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Viaje guid: (GUID fromString: '{E03F36D0-4DD3-4739-95B5-18145BE9533D}')!
Viaje comment: ''!
!Viaje categoriesForClass!Kernel-Objects! !
Object subclass: #Viaje
	instanceVariableNames: 'codigo_viaje'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #Viaje
	instanceVariableNames: 'codigo_viaje fecha'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #Viaje
	instanceVariableNames: 'codigo_viaje fecha hora'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #Viaje
	instanceVariableNames: 'codigo_viaje fecha hora destino'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #Viaje
	instanceVariableNames: 'codigo_viaje fecha hora destino importe'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #Viaje
	instanceVariableNames: 'codigo_viaje fecha hora destino importe cliente'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #Viaje
	instanceVariableNames: 'codigo_viaje fecha hora destino importe cliente chofer'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

!Viaje class methodsFor!
crearViajeCod: unCodigo fecha: unaFecha hora: unaHora destino: unDestino import: unImporte
"Retorna una instancia de viaje inicializada"
^(self new) iniViajeCod:  unCodigo fecha: unaFecha hora: unaHora destino: unDestino import: unImporte.! !
!Viaje class categoriesFor: #crearViajeCod:fecha:hora:destino:import:!public! !

!Viaje methodsFor!
iniViajeCod:  unCodigo fecha: unaFecha hora: unaHora destino: unDestino import: unImporte
"Inicializa una instancia de viaje"
codigo_viaje:=unCodigo.
fecha:=unaFecha.
hora:=unaHora.
destino:=unDestino.
importe:=unImporte.! !
!Viaje categoriesFor: #iniViajeCod:fecha:hora:destino:import:!public! !

!Viaje class methodsFor!
crearViajeCod: unCodigo fecha: unaFecha hora: unaHora destino: unDestino import: unImporte cli:unCliente cho:unChofer
"Retorna una instancia de viaje inicializada"
^(self new) iniViajeCod:  unCodigo fecha: unaFecha hora: unaHora destino: unDestino import: unImporte cli:unCliente cho:unChofer .! !
!Viaje class categoriesFor: #crearViajeCod:fecha:hora:destino:import:cli:cho:!public! !

!Viaje methodsFor!
iniViajeCod:  unCodigo fecha: unaFecha hora: unaHora destino: unDestino import: unImporte cli:unCliente cho:unChofer
"Inicializa una instancia de viaje"
codigo_viaje:=unCodigo.
fecha:=unaFecha.
hora:=unaHora.
destino:=unDestino.
importe:=unImporte.
cliente:=unCliente.
chofer:=unChofer. ! !
!Viaje categoriesFor: #iniViajeCod:fecha:hora:destino:import:cli:cho:!public! !

Viaje removeSelector: #iniViajeCod:fecha:hora:destino:import: ifAbsent: []!

!Viaje methodsFor!
verCodigo_viaje
"Retorna el codigo del viaje"
^codigo_viaje.! !
!Viaje categoriesFor: #verCodigo_viaje!public! !

!Viaje methodsFor!
verFecha
"Retorna la fecha del viaje"
^fecha. ! !
!Viaje categoriesFor: #verFecha!public! !

!Viaje methodsFor!
verHora
"Retorna la hora del viaje"
^hora. ! !
!Viaje categoriesFor: #verHora!public! !

!Viaje methodsFor!
verDestino
"Retorna el destino del viaje"
^destino. ! !
!Viaje categoriesFor: #verDestino!public! !

!Viaje methodsFor!
verImporte
"Retorna el importe del viaje"
^importe. ! !
!Viaje categoriesFor: #verImporte!public! !

!Viaje methodsFor!
verCliente
"Retorna el cliente"
^cliente. ! !
!Viaje categoriesFor: #verCliente!public! !

!Viaje methodsFor!
verChofer
"Retorna el chofer del viaje"
^chofer. ! !
!Viaje categoriesFor: #verChofer!public! !

!Viaje methodsFor!
verCliente
"Retorna el cliente del viaje"
^cliente. ! !
!Viaje categoriesFor: #verCliente!public! !

!Viaje methodsFor!
modiFecha: unaFecha
"Modifica la fecha del viaje"
fecha:=unaFecha. ! !
!Viaje categoriesFor: #modiFecha:!public! !

!Viaje methodsFor!
modiFecha: unaFecha
"Modifica la fecha del viaje"
fecha:= unaFecha. ! !
!Viaje categoriesFor: #modiFecha:!public! !

!Viaje methodsFor!
modiHora: unaHora
"Mofifica la hora del viaje"
hora:= unaHora.! !
!Viaje categoriesFor: #modiHora:!public! !

!Viaje methodsFor!
modiDestino: unDestino
"Modifica el destino del viaje"
destino:= unDestino.! !
!Viaje categoriesFor: #modiDestino:!public! !

!Viaje methodsFor!
modiDestino: unDestino
"Modifica el destino del viaje"
destino:= unDestino.! !
!Viaje categoriesFor: #modiDestino:!public! !

!Viaje methodsFor!
modiImporte: unImporte
"Modifica el importe de un viaje"
importe:=unImporte. ! !
!Viaje categoriesFor: #modiImporte:!public! !

!Viaje methodsFor!
modiCliente: unCliente
"Modifica el cliente del viaje"
cliente:= unCliente. ! !
!Viaje categoriesFor: #modiCliente:!public! !

!Viaje methodsFor!
modiChofer: unChofer
"Modifica un chofer del viaje"
chofer:=unChofer. ! !
!Viaje categoriesFor: #modiChofer:!public! !

!Viaje methodsFor!
modiChofer: unChofer
"Modifica un chofer del viaje"
chofer:=unChofer. ! !
!Viaje categoriesFor: #modiChofer:!public! !

Object subclass: #Reserva
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Reserva guid: (GUID fromString: '{AA4F9A87-EEA6-4B9E-9A1F-86B906119546}')!
Reserva comment: ''!
!Reserva categoriesForClass!Kernel-Objects! !
Object subclass: #Reserva
	instanceVariableNames: 'codigo_reserva'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #Reserva
	instanceVariableNames: 'codigo_reserva hora_reserva'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #Reserva
	instanceVariableNames: 'codigo_reserva hora_reserva destino'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #Reserva
	instanceVariableNames: 'codigo_reserva hora_reserva destino fecha'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #Reserva
	instanceVariableNames: 'codigo_reserva hora_reserva destino fecha cliente'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

!Reserva class methodsFor!
crearReservaCod: unCodigo hora: unaHora fecha: unaFecha dest: unDestino cliente: unCliente
"Retorna una instancia de reserva inicializada"
^ (self new) iniReservaCod: unCodigo hora: unaHora fecha: unaFecha dest: unDestino cliente: unCliente.! !
!Reserva class categoriesFor: #crearReservaCod:hora:fecha:dest:cliente:!public! !

!Reserva methodsFor!
iniReservaCod: unCodigo hora: unaHora fecha: unaFecha dest: unDestino cliente: unCliente
"Inicializa una instancia de reserva"
codigo_reserva:=unCodigo.
hora_reserva:=unaHora.
destino:=unDestino.
fecha:=unaFecha.
cliente:=unCliente. ! !
!Reserva categoriesFor: #iniReservaCod:hora:fecha:dest:cliente:!public! !

!Reserva methodsFor!
verCodigoReserva
"Retorna el codigo de la reserva"
^codigo_reserva.! !
!Reserva categoriesFor: #verCodigoReserva!public! !

!Reserva methodsFor!
verHoraReserva
"Retorna la hora de la reserva"
^hora_reserva. ! !
!Reserva categoriesFor: #verHoraReserva!public! !

!Reserva methodsFor!
verDestino
"Retorna  el destino de la reserva"
^destino. ! !
!Reserva categoriesFor: #verDestino!public! !

!Reserva methodsFor!
verFecha
"Retorna la fecha de la reserva"
^fecha. ! !
!Reserva categoriesFor: #verFecha!public! !

!Reserva methodsFor!
verCliente
"Retorna el cliente de la reserva"
^cliente. ! !
!Reserva categoriesFor: #verCliente!public! !

!Reserva methodsFor!
modiHoraReserva: unaHora
"Modifica la hora de la reserva"
hora_reserva:=unaHora. ! !
!Reserva categoriesFor: #modiHoraReserva:!public! !

!Reserva methodsFor!
modiHoraReserva: unaHora
"Modifica la hora de la reserva"
hora_reserva:= unaHora. ! !
!Reserva categoriesFor: #modiHoraReserva:!public! !

!Reserva methodsFor!
modiDestino: unDestino
"Modifica el destino de una reserva"
destino:=unDestino. ! !
!Reserva categoriesFor: #modiDestino:!public! !

!Reserva methodsFor!
modiFecha: unaFecha
"Modifica la fecha de una reserva"
fecha:= unaFecha. ! !
!Reserva categoriesFor: #modiFecha:!public! !

!Reserva methodsFor!
modiCliente: unCliente
"Modifica el cliente que hace la reserva"
cliente:= unCliente. ! !
!Reserva categoriesFor: #modiCliente:!public! !

"09:12:00 p.m., miércoles, 28 de octubre de 2020: Image saved"!

"09:12:20 p.m., miércoles, 28 de octubre de 2020: Image saved"!

"09:12:40 p.m., miércoles, 28 de octubre de 2020: Image saved"!

"09:12:58 p.m., miércoles, 28 de octubre de 2020: Image saved"!

"09:13:01 p.m., miércoles, 28 de octubre de 2020: Image saved"!

"02:01:56 p.m., sábado, 31 de octubre de 2020: Dolphin Smalltalk Professional started"!

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'su casa' tel: '47841257' dni: '789456123' cod: 01 hora: '8 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 
r inspect.!

|remi c cl r a|


c:= Chofer crearChoferNom: 'Pepe' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.

(c verNombre) inspect.

cl:= Cliente crearClienteNom: 'Nico' dir: 'mi casa' tel: '42387458' dni: '78945217' cod: 01.
cl inspect.

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'su casa' tel: '47841257' dni: '789456123' cod: 01 hora: '8 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 
r inspect.
remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.
remi inspect.!

"02:09:32 p.m., sábado, 31 de octubre de 2020: Image saved"!

"02:09:44 p.m., sábado, 31 de octubre de 2020: Image saved"!

"02:09:47 p.m., sábado, 31 de octubre de 2020: Image saved"!

"02:48:14 p.m., sábado, 31 de octubre de 2020: Dolphin Smalltalk Professional started"!

"03:09:37 p.m., sábado, 31 de octubre de 2020: Image saved"!

|remi c cl r a n d t dn co re ch col1|


c:= Chofer crearChoferNom: 'Pepe' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.



cl:= Cliente crearClienteNom: 'Nico' dir: 'mi casa' tel: '42387458' dni: '78945217' cod: 01.


r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'su casa' tel: '47841257' dni: '789456123' cod: 01 hora: '8 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


1 to: 3 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. 

col1:=remi todosLosChoferes.
1 to: col1 size do: [:i| (col1 at: i) verNombre inspect ].!

"04:22:35 p.m., sábado, 31 de octubre de 2020: Image saved"!

"04:23:58 p.m., sábado, 31 de octubre de 2020: Image saved"!

"04:24:05 p.m., sábado, 31 de octubre de 2020: Image saved"!

"04:24:09 p.m., sábado, 31 de octubre de 2020: Image saved"!

"04:39:35 p.m., sábado, 31 de octubre de 2020: Dolphin Smalltalk Professional started"!


c:= Chofer crearChoferNom: 'Pepe' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.



cl:= Cliente crearClienteNom: 'Nico' dir: 'mi casa' tel: '42387458' dni: '78945217' cod: 01.


r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'su casa' tel: '47841257' dni: '789456123' cod: 01 hora: '8 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.
remi inspect.!

col1:=remi todosLosChoferes.
1 to: col1 size do: [:i| (col1 at: i) verNombre inspect ].!

aut:= Auto crearAutoPatente: '123' col: 'rojo' mod: 'fiat' cod: 05 .
c:= Chofer crearChoferNom: 'Pepe' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.
c agregarAuto: aut.
c inspect.!

aut:= Auto crearAutoPatente: '123' col: 'rojo' mod: 'fiat siena' cod: 05 .
aut1:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
aut2:= Auto crearAutoPatente: '789' col: 'negro' mod: 'renault logan' cod: 07 .
c:= Chofer crearChoferNom: 'Julio' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.
c agregarAuto: aut.
c1:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c1 agregarAuto: aut1 .
c2:=Chofer crearChoferNom: 'Pedro' dir: 'Calle peron 1254' tel: '42578498' dni: '45458723' cod: 03 reg: 'comun'.
c2 agregarAuto: aut2 . 

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'su casa' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.
remi agregarChofer: c. 
remi agregarChofer: c1.
remi agregarChofer: c2. 
remi inspect. !

aut:= Auto crearAutoPatente: '123' col: 'rojo' mod: 'fiat siena' cod: 05 .
aut1:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
aut2:= Auto crearAutoPatente: '789' col: 'negro' mod: 'renault logan' cod: 07 .
c:= Chofer crearChoferNom: 'Julio' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.
c agregarAuto: aut.
c1:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c1 agregarAuto: aut1 .
c2:=Chofer crearChoferNom: 'Pedro' dir: 'Calle peron 1254' tel: '42578498' dni: '45458723' cod: 03 reg: 'comun'.
c2 agregarAuto: aut2 . 

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.
remi agregarChofer: c. 
remi agregarChofer: c1.
remi agregarChofer: c2. 


cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
cl1:= Cliente crearClienteNom: 'Enzo' dir: 'av. clachaqui 1500 ' tel: '42375429' dni: '7547857' cod: 02.
cl2:= Cliente crearClienteNom: 'Claudio' dir: 'calle neuquen 1987' tel: '42558710' dni: '78945217' cod: 03.
remi agregarCliente: cl.
remi agregarCliente: cl1.
remi agregarCliente: cl2. 

remi inspect.!

|remi c cl r a n d t dn co re ch col1 aut|

aut:= Auto crearAutoPatente: '123' col: 'rojo' mod: 'fiat siena' cod: 05 .
aut1:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
aut2:= Auto crearAutoPatente: '789' col: 'negro' mod: 'renault logan' cod: 07 .
c:= Chofer crearChoferNom: 'Julio' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.
c agregarAuto: aut.
c1:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c1 agregarAuto: aut1 .
c2:=Chofer crearChoferNom: 'Pedro' dir: 'Calle peron 1254' tel: '42578498' dni: '45458723' cod: 03 reg: 'comun'.
c2 agregarAuto: aut2 . 

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.
remi agregarChofer: c. 
remi agregarChofer: c1.
remi agregarChofer: c2. 


cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
cl1:= Cliente crearClienteNom: 'Enzo' dir: 'av. clachaqui 1500 ' tel: '42375429' dni: '7547857' cod: 02.
cl2:= Cliente crearClienteNom: 'Claudio' dir: 'calle neuquen 1987' tel: '42558710' dni: '78945217' cod: 03.
remi agregarCliente: cl.
remi agregarCliente: cl1.
remi agregarCliente: cl2. 

remi inspect.

"1 to: 3 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. "

1 to: 3 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del cliente: '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente:'.
			t:= Prompter prompt: ' Ingrese el telefono del cliente: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente: '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.
			
			cl:= Cliente crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ]. !

|remi aut c cl r a |
r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '123' col: 'rojo' mod: 'fiat siena' cod: 05 .
c:= Chofer crearChoferNom: 'Julio' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.
c agregarAuto: aut.
remi agregarChofer: c. 

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

aut:= Auto crearAutoPatente: '789' col: 'negro' mod: 'renault logan' cod: 07 .
c:=Chofer crearChoferNom: 'Pedro' dir: 'Calle peron 1254' tel: '42578498' dni: '45458723' cod: 03 reg: 'comun'.
c agregarAuto: aut . 
remi agregarChofer: c. 
remi inspect.!

|remi aut c cl r a |
r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '123' col: 'rojo' mod: 'fiat siena' cod: 05 .
c:= Chofer crearChoferNom: 'Julio' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.
c agregarAuto: aut.
remi agregarChofer: c. 

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

aut:= Auto crearAutoPatente: '789' col: 'negro' mod: 'renault logan' cod: 07 .
c:=Chofer crearChoferNom: 'Pedro' dir: 'Calle peron 1254' tel: '42578498' dni: '45458723' cod: 03 reg: 'comun'.
c agregarAuto: aut . 
remi agregarChofer: c. 


cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Enzo' dir: 'av. clachaqui 1500 ' tel: '42375429' dni: '7547857' cod: 02.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Claudio' dir: 'calle neuquen 1987' tel: '42558710' dni: '78945217' cod: 03.
remi agregarCliente: cl. 


remi inspect.!

"07:19:12 p.m., sábado, 31 de octubre de 2020: Image saved"!

"07:19:15 p.m., sábado, 31 de octubre de 2020: Image saved"!

"07:19:24 p.m., sábado, 31 de octubre de 2020: Image saved"!

"07:19:36 p.m., sábado, 31 de octubre de 2020: Image saved"!

"07:19:41 p.m., sábado, 31 de octubre de 2020: Image saved"!

"07:19:44 p.m., sábado, 31 de octubre de 2020: Image saved"!

"07:19:48 p.m., sábado, 31 de octubre de 2020: Image saved"!

"12:37:15 a.m., domingo, 01 de noviembre de 2020: Dolphin Smalltalk Professional started"!

Transcript nextPutAll: 'Pagina de prueba'.!

Transcript nextPutAll: 'Pagina de prueba'.
Transcript cr.
'EDAD: ' printOn: Transcript.
Transcript space .
56 printOn: Transcript.
!

Transcript

show: 'Hola mundo' .!

Transcript

show: 'Hola mundo' .!

Transcript

show: 'Hola mundo' ;
clear.!

Transcript

show: 'Hola mundo' ;
cr;
showAllColorSymbol.!

Transcript

show: 'Hola mundo' ;
cr;
show: 'Nico'.!

Transcript clear.!

| op|

Transcript clear; 
show: 'Remiseria';
cr.

Transcript show: '1. Carga de datos';
cr;
show: '2. Solicitar viaje';
cr;
show: '3. Imprimir viaje';
cr;
show: '4. Salir';
cr.!

Transcript clear; 
show: 'Remiseria®';
cr.

Transcript show: '1. Carga de datos';
cr;
show: '2. Solicitar viaje';
cr;
show: '3. Imprimir viaje';
cr;
show: '4. Salir';
cr.!

Transcript clear; 
show: 'Remiseria ®';
cr.

Transcript show: '1. Carga de datos';
cr;
show: '2. Solicitar viaje';
cr;
show: '3. Imprimir viaje';
cr;
show: '4. Salir';
cr!

Transcript clear; 
show: 'Remiseria ^®';
cr.

Transcript show: '1. Carga de datos';
cr;
show: '2. Solicitar viaje';
cr;
show: '3. Imprimir viaje';
cr;
show: '4. Salir';
cr.!

| op|

Transcript clear; 
show: 'Remiseria ®';
cr.

Transcript show: '1. Carga de datos';
cr;
show: '2. Solicitar viaje';
cr;
show: '3. Imprimir viaje';
cr;
show: '4. Salir';
cr.

op:=(Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op~=4] whileTrue: [
(op=1) ifTrue: [ Transcript show: 'eligio cargar datos'; cr. ].
(op=2) ifTrue: [ Transcript show: 'eligio solicitar un viaje'; cr. ].
(op=3) ifTrue: [ Transcript  show: 'eligio imprimir un viaje';cr. ].
					]. !

"01:12:02 a.m., domingo, 01 de noviembre de 2020: Dolphin Smalltalk Professional started"!

| op |

Transcript clear;
show: ' Remiseria';
cr.

Transcript show: ' 1. Carga de datos';
cr;
show: ' 2. Solicitar viaje';
cr;
show: ' 3. Salir'; 
cr.!

| op |

Transcript clear;
show: ' Remiseria';
cr.

Transcript show: ' 1. Carga de datos';
cr;
show: ' 2. Solicitar viaje';
cr;
show: ' 3. Salir'; 
cr.

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=4] whileTrue: [ 
(op=1) ifTrue: [ Transcript  show: 'eligio la opcion 1' ].
(op=2) ifTrue: [ Transcript  show: ' eligio la opcion 2' ].
	]. !

"01:21:26 a.m., domingo, 01 de noviembre de 2020: Dolphin Smalltalk Professional started"!

| op |

Transcript clear;
show: ' Remiseria';
cr.

Transcript show: ' 1. Carga de datos';
cr;
show: ' 2. Solicitar viaje';
cr;
show: ' 3. Salir'; 
cr.

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=4] whileTrue: [ 
(op=1) ifTrue: [ Transcript  show: 'eligio la opcion 1' ].
(op=2) ifTrue: [ Transcript  show: ' eligio la opcion 2' ].
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. !

| op |

Transcript clear;
show: ' Remiseria';
cr.

Transcript show: ' 1. Carga de datos';
cr;
show: ' 2. Solicitar viaje';
cr;
show: ' 3. Salir'; 
cr.

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=3] whileTrue: [ 
(op=1) ifTrue: [ Transcript  show: 'eligio la opcion 1'; cr ].
(op=2) ifTrue: [ Transcript  show: ' eligio la opcion 2' ; cr].
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. !

| op n d t dn co re ch remi|

Transcript clear;
show: ' Remiseria';
cr.

Transcript show: ' 1. Carga de datos';
cr;
show: ' 2. Solicitar viaje';
cr;
show: ' 3. Salir'; 
cr.

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=3] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 3 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].
(op=2) ifTrue: [ Transcript  show: ' eligio la opcion 2' ; cr].
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. !

| op n d t dn co re ch remi col1|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

Transcript clear;
show: ' Remiseria';
cr.

Transcript show: ' 1. Carga de datos';
cr;
show: ' 2. Imprimir choferes';
cr;
show: ' 3. Salir'; 
cr.

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=3] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 2 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].
(op=2) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i| (col1 at: i) verNombre printString ] ].
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. !

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

remi verNombre printString. !

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

Transcript  show: remi verNombre printString. !

| op n d t dn co re ch remi col1|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria';
show: remi verNombre printString;
cr.

Transcript show: ' 1. Carga de datos';
cr;
show: ' 2. Imprimir choferes';
cr;
show: ' 3. Salir'; 
cr.

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=3] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 2 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].
(op=2) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString ]. ].
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. !

| op n d t dn co re ch remi col1|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria';
show: remi verNombre printString;
cr.

Transcript show: ' 1. Carga de datos';
cr;
show: ' 2. Imprimir choferes';
cr;
show: ' 3. Salir'; 
cr.

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=3] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 2 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].
(op=2) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. !


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
cr.!

"01:51:18 a.m., domingo, 01 de noviembre de 2020: Image saved"!

"01:51:33 a.m., domingo, 01 de noviembre de 2020: Image saved"!

"01:51:43 a.m., domingo, 01 de noviembre de 2020: Image saved"!

"01:51:46 a.m., domingo, 01 de noviembre de 2020: Image saved"!

"01:51:49 a.m., domingo, 01 de noviembre de 2020: Image saved"!

"17:16:37, domingo, 1 de noviembre de 2020: Dolphin Smalltalk Professional started"!

|remi aut c cl r a |
r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.

aut:= Auto crearAutoPatente: '123' col: 'rojo' mod: 'fiat siena' cod: 05 .
c:= Chofer crearChoferNom: 'Julio' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.
c agregarAuto: aut.
remi agregarChofer: c. 

aut:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
c:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c agregarAuto: aut .
remi agregarChofer: c.

aut:= Auto crearAutoPatente: '789' col: 'negro' mod: 'renault logan' cod: 07 .
c:=Chofer crearChoferNom: 'Pedro' dir: 'Calle peron 1254' tel: '42578498' dni: '45458723' cod: 03 reg: 'comun'.
c agregarAuto: aut . 
remi agregarChofer: c. 


cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Enzo' dir: 'av. clachaqui 1500 ' tel: '42375429' dni: '7547857' cod: 02.
remi agregarCliente: cl.

cl:= Cliente crearClienteNom: 'Claudio' dir: 'calle neuquen 1987' tel: '42558710' dni: '78945217' cod: 03.
remi agregarCliente: cl. 


remi inspect.!

| op n d t dn co re ch remi col1|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
cr.

Transcript show: ' 1. Carga de datos';
cr;
show: ' 2. Imprimir choferes';
cr;
show: ' 3. Salir'; 
cr.

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=3] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 2 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].
(op=2) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 
!

| op n d t dn co re ch remi col1|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
cr.

Transcript show: ' 1. Carga de datos';
cr;
show: ' 2. Imprimir choferes';
cr;
show: ' 3. Salir'; 
cr.

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=2] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 2 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].
(op=2) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. !

| op n d t dn co re ch remi col1|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: remi verDireccion  printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de datos';
cr;
show: ' 2. Imprimir choferes';
cr;
show: ' 3. Salir'; 
cr.

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=2] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 2 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].
(op=2) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 

!


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: remi , 'Direccion' verDireccion  printString;
show: remi verTelefono printString;
cr.!

| op n d t dn co re ch remi col1|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: remi , 'Direccion' verDireccion  printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de datos';
cr;
show: ' 2. Imprimir choferes';
cr;
show: ' 3. Salir'; 
cr.

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=2] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 2 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].
(op=2) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 

!

| op n d t dn co re ch remi col1|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: remi verDireccion  printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de datos';
cr;
show: ' 2. Imprimir choferes';
cr;
show: ' 3. Salir'; 
cr.

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=2] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 2 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].
(op=2) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 

!

| op n d t dn co re ch remi col1|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion ';
show: remi verDireccion  printString;
show: ' Telefono ';
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de datos';
cr;
show: ' 2. Imprimir choferes';
cr;
show: ' 3. Salir'; 
cr.

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=2] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 2 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].
(op=2) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 

!

| op n d t dn co re ch remi col1|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: '  ';
show: ' Direccion ';
show: remi verDireccion  printString;
show: ' Telefono ';
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de datos';
cr;
show: ' 2. Imprimir choferes';
cr;
show: ' 3. Salir'; 
cr.

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=2] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 2 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].
(op=2) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 
!

| op n d t dn co re ch remi col1|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;

show: ' Direccion ' printString;
show: remi verDireccion  printString;
show: ' Telefono 'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de datos';
cr;
show: ' 2. Imprimir choferes';
cr;
show: ' 3. Salir'; 
cr.

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=2] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 2 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].
(op=2) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 

!

| op n d t dn co re ch remi col1|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de datos';
cr;
show: ' 2. Imprimir choferes';
cr;
show: ' 3. Salir'; 
cr.

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=2] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 2 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].
(op=2) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. !

| op n d t dn co re ch remi col1|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de datos';
cr;
show: ' 2. Imprimir choferes';
cr;
show: ' 3. Salir'; 
cr.

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=2] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 2 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].
(op=2) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. !

| op n d t dn co re ch remi col1|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de datos';
cr;
show: ' 2. Imprimir choferes';
cr;
show: ' 3. Salir'; 
cr.

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=2] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 2 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].
(op=2) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 
!

| op n d t dn co re ch remi col1|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de datos';
cr;
show: ' 2. Imprimir choferes';
cr;
show: ' 3. Salir'; 
cr.

op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=3] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 2 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].
(op=2) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. !

!Persona methodsFor!
iniPersonaNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni
"Inicializa una instancia de persona, sus clases hijos llamaran este metodo"
nombre:=unNombre.
direccion:=unaDireccion.
telefono:=unTelefono.
dni:=unDni.! !
!Persona categoriesFor: #iniPersonaNom:dir:tel:dni:!public! !

!Persona methodsFor!
iniPersonaNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni
"Inicializa una instancia de persona, sus clases hijos llamaran este metodo"
nombre:=unNombre.
direccion:=unaDireccion.
telefono:=unTelefono.
dni:=unDni.! !
!Persona categoriesFor: #iniPersonaNom:dir:tel:dni:!public! !

!Persona methodsFor!
modiDireccion: unaDir
"Modifica la direccion de una persona"
direccion:=unaDir.! !
!Persona categoriesFor: #modiDireccion:!public! !

!Persona methodsFor!
modiDireccion: unaDir
"Modifica la direccion de una persona"
direccion:=unaDir.! !
!Persona categoriesFor: #modiDireccion:!public! !

!Persona methodsFor!
modiTelefono: unTel
"Mofica el telefono"
telefono:=unTel.! !
!Persona categoriesFor: #modiTelefono:!public! !

!Persona methodsFor!
modiNombre: unNom
"Modifica el nombre de una persona"
nombre:=unNom.! !
!Persona categoriesFor: #modiNombre:!public! !

!Persona methodsFor!
modiNombre: unNom
"Modifica el nombre de una persona"
nombre:=unNom.! !
!Persona categoriesFor: #modiNombre:!public! !

!Persona methodsFor!
verDireccion
"Retorna la direccion de una persona"
^direccion.! !
!Persona categoriesFor: #verDireccion!public! !

!Persona methodsFor!
verNombre
"Retorna el nombre de la persona"
^nombre.! !
!Persona categoriesFor: #verNombre!public! !

!Persona methodsFor!
verTelefono
"Retorna el telefono de una persona"
^telefono.! !
!Persona categoriesFor: #verTelefono!public! !

!Persona methodsFor!
verDni
"Retorna el dni de una persona"
^dni.! !
!Persona categoriesFor: #verDni!public! !

!Chofer methodsFor!
agregarAuto: unAuto
"Agrega o modifica un auto al chofer"
auto:=unAuto.! !
!Chofer categoriesFor: #agregarAuto:!public! !

!Chofer methodsFor!
iniChoferNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo reg:unRegistro
"Crea una instancia de chofer"
super iniPersonaNom: unNombre dir: unaDireccion tel: unTelefono dni: unDni.
codigo:=unCodigo.
registro:=unRegistro.
disponible:=true! !
!Chofer categoriesFor: #iniChoferNom:dir:tel:dni:cod:reg:!public! !

!Chofer methodsFor!
iniChoferNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo reg:unRegistro
"Crea una instancia de chofer"
super iniPersonaNom: unNombre dir: unaDireccion tel: unTelefono dni: unDni.
codigo:=unCodigo.
registro:=unRegistro.
disponible:=true.! !
!Chofer categoriesFor: #iniChoferNom:dir:tel:dni:cod:reg:!public! !

!Chofer methodsFor!
modiDisponibilidad
"Modifica el estado del chofer"
disponible:= disponible not.! !
!Chofer categoriesFor: #modiDisponibilidad!public! !

!Chofer methodsFor!
modiRegistro: unreg
"Modifica el registro del chofer"
registro:= unreg.! !
!Chofer categoriesFor: #modiRegistro:!public! !

!Chofer methodsFor!
verAuto
"Retorna auto"
^auto.! !
!Chofer categoriesFor: #verAuto!public! !

!Chofer methodsFor!
verCodigo_auto
"Retorna el codigo del auto"
^codigo.! !
!Chofer categoriesFor: #verCodigo_auto!public! !

!Chofer methodsFor!
verCodigo_auto
"Retorna el codigo del auto"
^codigo.! !
!Chofer categoriesFor: #verCodigo_auto!public! !

Chofer removeSelector: #verCodigo_auto ifAbsent: []!

!Chofer methodsFor!
verCodigo
"Retorna el codigo del chofer"
^codigo.! !
!Chofer categoriesFor: #verCodigo!public! !

!Chofer methodsFor!
verCodigo
"Retorna el codigo del chofer"
^codigo.! !
!Chofer categoriesFor: #verCodigo!public! !

!Chofer methodsFor!
verDisponibilidad
"Retorna true si el chofer esta disponible"
^disponible! !
!Chofer categoriesFor: #verDisponibilidad!public! !

!Chofer methodsFor!
verDisponibilidad
"Retorna true si el chofer esta disponible"
^disponible! !
!Chofer categoriesFor: #verDisponibilidad!public! !

!Chofer methodsFor!
verRegistro
"Retorna el registro del chofer"
^registro.! !
!Chofer categoriesFor: #verRegistro!public! !

!Chofer class methodsFor!
crearChoferNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo reg:unRegistro
"Retorna una instancia de chofer inicializada"
^(self new) iniChoferNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo reg:unRegistro.! !
!Chofer class categoriesFor: #crearChoferNom:dir:tel:dni:cod:reg:!public! !

!Chofer class methodsFor!
crearChoferNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo reg:unRegistro
"Retorna una instancia de chofer inicializada"
^(self new) iniChoferNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo reg:unRegistro.! !
!Chofer class categoriesFor: #crearChoferNom:dir:tel:dni:cod:reg:!public! !

!Cliente methodsFor!
crearClienteNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo
"Retorna una instancia inicializada de cliente"
^(self new) iniClienteNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo.! !
!Cliente categoriesFor: #crearClienteNom:dir:tel:dni:cod:!public! !

Cliente removeSelector: #crearClienteNom:dir:tel:dni:cod: ifAbsent: []!

!Cliente class methodsFor!
crearClienteNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo
"Retorna una instancia inicializada de cliente"
^(self new) iniClienteNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo.! !
!Cliente class categoriesFor: #crearClienteNom:dir:tel:dni:cod:!public! !

!Cliente class methodsFor!
crearClienteNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo
"Retorna una instancia inicializada de cliente"
^(self new) iniClienteNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo.! !
!Cliente class categoriesFor: #crearClienteNom:dir:tel:dni:cod:!public! !

!Cliente methodsFor!
iniClienteNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo
"Inicializa una instancia de cliente"
super iniPersonaNom: unNombre dir: unaDireccion tel: unTelefono dni: unDni.! !
!Cliente categoriesFor: #iniClienteNom:dir:tel:dni:cod:!public! !

!Cliente methodsFor!
verCodigoCliente
"Retorna el codigo del cliente"
^codigo_cliente.! !
!Cliente categoriesFor: #verCodigoCliente!public! !

!Cliente methodsFor!
verCodigoCliente
"Retorna el codigo del cliente"
^codigo_cliente.! !
!Cliente categoriesFor: #verCodigoCliente!public! !

!Recepcionista class methodsFor!
crearRecepcionistaNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo hora:unaHorario
"Retorna una instancia de recepcionista inicializada"
^(self new) iniRecepcionistaNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo hora:unaHorario.! !
!Recepcionista class categoriesFor: #crearRecepcionistaNom:dir:tel:dni:cod:hora:!public! !

!Recepcionista methodsFor!
agregarAgenda: unaAgenda
"Agrega una agenda a recepcionista"
agenda:=unaAgenda.! !
!Recepcionista categoriesFor: #agregarAgenda:!public! !

!Recepcionista methodsFor!
iniRecepcionistaNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo hora:unaHorario
"Inicializa una instancia de recepcionista"
super iniPersonaNom: unNombre dir: unaDireccion tel: unTelefono dni: unDni.
codigo_recep:=unCodigo.
horario_laboral:=unaHorario.! !
!Recepcionista categoriesFor: #iniRecepcionistaNom:dir:tel:dni:cod:hora:!public! !

!Recepcionista methodsFor!
modiHorario: unHorario
"Modofica el horario laboral"
horario_laboral:=unHorario.! !
!Recepcionista categoriesFor: #modiHorario:!public! !

!Recepcionista methodsFor!
verAgenda
"Retorna agenda"
^agenda.! !
!Recepcionista categoriesFor: #verAgenda!public! !

!Recepcionista methodsFor!
verCodigo_recep
"Retorna el codigo de la recepcionista"
^codigo_recep.! !
!Recepcionista categoriesFor: #verCodigo_recep!public! !

!Recepcionista methodsFor!
verHorario
"Retorna el horario laboral de la recepcionista"
^horario_laboral.! !
!Recepcionista categoriesFor: #verHorario!public! !

!Remiseria methodsFor!
todosLosChoferes
"Retorna la lista de los choferes"
^lista_chofer.! !
!Remiseria categoriesFor: #todosLosChoferes!public! !

!Remiseria methodsFor!
todosLosClientes
"Retorna la lista de clientes"
^lista_clientes.! !
!Remiseria categoriesFor: #todosLosClientes!public! !

!Remiseria methodsFor!
agregarChofer: unChofer
"Agrega un chofer a la remiseria"
lista_chofer add: unChofer.! !
!Remiseria categoriesFor: #agregarChofer:!public! !

!Remiseria methodsFor!
agregarCliente: unCliente
"Agrega un cliente a la remiseria"
lista_clientes add: unCliente.! !
!Remiseria categoriesFor: #agregarCliente:!public! !

!Remiseria methodsFor!
eliminarChofer: unChofer
"Elimina un chofer de la remiseria"
lista_chofer remove: unChofer.! !
!Remiseria categoriesFor: #eliminarChofer:!public! !

!Remiseria methodsFor!
eliminarCliente: unCliente
"Elimina un cliente de la remiseria"
lista_clientes remove: unCliente.! !
!Remiseria categoriesFor: #eliminarCliente:!public! !

!Remiseria methodsFor!
existeChofer: unChofer
"Retorna true si el chofer existe en el remiseria, retorna false en caso contrario"
^lista_chofer includes: unChofer.! !
!Remiseria categoriesFor: #existeChofer:!public! !

!Remiseria methodsFor!
existeChofer: unChofer
"Retorna true si el chofer existe en el remiseria, retorna false en caso contrario"
^lista_chofer includes: unChofer.! !
!Remiseria categoriesFor: #existeChofer:!public! !

!Remiseria methodsFor!
existeCliente: unCliente
"Retorna true si existe el cliente en la remiseria, false en caso contrario"
^lista_clientes includes: unCliente.! !
!Remiseria categoriesFor: #existeCliente:!public! !

!Remiseria methodsFor!
existeCliente: unCliente
"Retorna true si existe el cliente en la remiseria, false en caso contrario"
^lista_clientes includes: unCliente.! !
!Remiseria categoriesFor: #existeCliente:!public! !

!Viaje methodsFor!
iniViajeCod:  unCodigo fecha: unaFecha hora: unaHora destino: unDestino import: unImporte
"Inicializa una instancia de viaje"
codigo_viaje:=unCodigo.
fecha:=unaFecha.
hora:=unaHora.
destino:=unDestino.
importe:=unImporte.! !
!Viaje categoriesFor: #iniViajeCod:fecha:hora:destino:import:!public! !

Viaje removeSelector: #iniViajeCod:fecha:hora:destino:import: ifAbsent: []!

!Viaje methodsFor!
iniViajeCod:  unCodigo fecha: unaFecha hora: unaHora destino: unDestino import: unImporte cli:unCliente cho:unChofer
"Inicializa una instancia de viaje"
codigo_viaje:=unCodigo.
fecha:=unaFecha.
hora:=unaHora.
destino:=unDestino.
importe:=unImporte.
cliente:=unCliente.
chofer:=unChofer! !
!Viaje categoriesFor: #iniViajeCod:fecha:hora:destino:import:cli:cho:!public! !

!Viaje methodsFor!
modiChofer: unChofer
"Modifica un chofer del viaje"
chofer:=unChofer.! !
!Viaje categoriesFor: #modiChofer:!public! !

!Viaje methodsFor!
modiCliente: unCliente
"Modifica el cliente que hace la reserva"
cliente:= unCliente.! !
!Viaje categoriesFor: #modiCliente:!public! !

!Viaje methodsFor!
modiDestino: unDestino
"Modifica el destino del viaje"
destino:= unDestino.! !
!Viaje categoriesFor: #modiDestino:!public! !

!Viaje methodsFor!
modiHora: unaHora
"Mofifica la hora del viaje"
hora:= unaHora.! !
!Viaje categoriesFor: #modiHora:!public! !

!Viaje methodsFor!
modiFecha: unaFecha
"Modifica la fecha del viaje"
fecha:= unaFecha.! !
!Viaje categoriesFor: #modiFecha:!public! !

!Viaje methodsFor!
modiImporte: unImporte
"Modifica el importe de un viaje"
importe:=unImporte.! !
!Viaje categoriesFor: #modiImporte:!public! !

!Viaje methodsFor!
modiImporte: unImporte
"Modifica el importe de un viaje"
importe:=unImporte.! !
!Viaje categoriesFor: #modiImporte:!public! !

!Viaje methodsFor!
verChofer
"Retorna el chofer del viaje"
^chofer.! !
!Viaje categoriesFor: #verChofer!public! !

!Viaje methodsFor!
verCliente
"Retorna el cliente del viaje"
^cliente.! !
!Viaje categoriesFor: #verCliente!public! !

!Viaje methodsFor!
verCodigo_viaje
"Retorna el codigo del viaje"
^codigo_viaje.! !
!Viaje categoriesFor: #verCodigo_viaje!public! !

!Viaje methodsFor!
verDestino
"Retorna el destino del viaje"
^destino.! !
!Viaje categoriesFor: #verDestino!public! !

!Viaje methodsFor!
verFecha
"Retorna la fecha de la reserva"
^fecha.! !
!Viaje categoriesFor: #verFecha!public! !

!Viaje methodsFor!
verHora
"Retorna la hora del viaje"
^hora.! !
!Viaje categoriesFor: #verHora!public! !

!Viaje methodsFor!
verImporte
"Retorna el importe del viaje"
^importe.! !
!Viaje categoriesFor: #verImporte!public! !

!Viaje methodsFor!
verImporte
"Retorna el importe del viaje"
^importe.! !
!Viaje categoriesFor: #verImporte!public! !

!Viaje methodsFor!
verFecha
"Retorna la fecha de la reserva"
^fecha.! !
!Viaje categoriesFor: #verFecha!public! !

!Viaje methodsFor!
verFecha
"Retorna la fecha del viaje"
^fecha.! !
!Viaje categoriesFor: #verFecha!public! !

!Viaje class methodsFor!
crearViajeCod: unCodigo fecha: unaFecha hora: unaHora destino: unDestino import: unImporte cli:unCliente cho:unChofer
"Retorna una instancia de viaje inicializada"
^(self new) iniViajeCod:  unCodigo fecha: unaFecha hora: unaHora destino: unDestino import: unImporte cli:unCliente cho:unChofer .! !
!Viaje class categoriesFor: #crearViajeCod:fecha:hora:destino:import:cli:cho:!public! !

!Viaje class methodsFor!
crearViajeCod: unCodigo fecha: unaFecha hora: unaHora destino: unDestino import: unImporte cli:unCliente cho:unChofer
"Retorna una instancia de viaje inicializada"
^(self new) iniViajeCod:  unCodigo fecha: unaFecha hora: unaHora destino: unDestino import: unImporte cli:unCliente cho:unChofer .! !
!Viaje class categoriesFor: #crearViajeCod:fecha:hora:destino:import:cli:cho:!public! !

Viaje class removeSelector: #crearViajeCod:fecha:hora:destino:import: ifAbsent: []!


col1:= remi collect:[:alu| alu verNom ].!

| op n d t dn co re ch remi col1|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de datos';
cr;
show: ' 2. Imprimir choferes';
cr;
show: ' 3. Salir'; 
cr.

col1:= remi collect:[:alu| alu verNom ].!


Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Imprimir choferes';
cr;
show: ' 3. Salir'; 
cr.


!

| op n d t dn co re ch remi col1|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Imprimir choferes';
cr;
show: ' 3. Salir'; 
cr.




op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=3] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 2 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].
(op=2) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 
!


Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Imprimir choferes';
cr;
show: ' 4. Imprimir Clientes';
cr;



show: ' 3. Salir'; 
cr.!

| op n d t dn co re ch remi col1|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Imprimir choferes';
cr;
show: ' 4. Imprimir Clientes';
cr;



show: ' 3. Salir'; 
cr.




op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=3] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 2 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].
(op=2) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. !

| op n d t dn co re ch remi col1|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Imprimir choferes';
cr;
show: ' 4. Imprimir Clientes';
cr;



show: ' 5. Salir'; 
cr.




op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=5] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 2 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].
(op=2) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. !

| op n d t dn co re ch remi client col1 col2|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Imprimir choferes';
cr;
show: ' 4. Imprimir Clientes';
cr;



show: ' 5. Salir'; 
cr.




op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=5] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 3 do: [:i| 
			"n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ]."
			ch:= Chofer crearChoferNom: 'enzo' dir: 'los pilares' tel: '123123123' dni: 40213123 cod: '01' reg: 'profesional' . 
			remi agregarChofer: ch ].
			ch:= Chofer crearChoferNom: 'martin' dir: 'los pilares' tel: '123123123' dni: 40213123 cod: '02' reg: 'profesional' . 
			remi agregarChofer: ch ].
			ch:= Chofer crearChoferNom: 'gomez' dir: 'los pilares' tel: '123123123' dni: 40213123 cod: '03' reg: 'profesional' . 
			remi agregarChofer: ch ].



"(op=2) ifTrue: [ 1 to: 2 do: [:i| 
			n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.
			
			ch:= Cliente crearClienteNom: n dir: d tel: t dni: dn cod: co reg: re . 
			 client agregarCliente: ch ]. ]."

(op=2) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber!

"18:48:21, domingo, 1 de noviembre de 2020: Dolphin Smalltalk Professional started"!

"18:49:55, domingo, 1 de noviembre de 2020: Image saved"!

|remi c cl r a n d t dn co re ch col1 aut|

aut:= Auto crearAutoPatente: '123' col: 'rojo' mod: 'fiat siena' cod: 05 .
aut1:= Auto crearAutoPatente: '236' col: 'blanco' mod: 'chevrolet corsa' cod: 06 .
aut2:= Auto crearAutoPatente: '789' col: 'negro' mod: 'renault logan' cod: 07 .
c:= Chofer crearChoferNom: 'Julio' dir: 'Calle necoche 7894' tel: '42558798' dni: '456789123' cod: 01 reg: 'profesional'.
c agregarAuto: aut.
c1:= Chofer crearChoferNom: 'Mario' dir: 'Calle 14 7415' tel: '42457816' dni: '159753147' cod: 02 reg: 'profesional'.
c1 agregarAuto: aut1 .
c2:=Chofer crearChoferNom: 'Pedro' dir: 'Calle peron 1254' tel: '42578498' dni: '45458723' cod: 03 reg: 'comun'.
c2 agregarAuto: aut2 . 

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.
remi agregarChofer: c. 
remi agregarChofer: c1.
remi agregarChofer: c2. 


cl:= Cliente crearClienteNom: 'Nico' dir: 'calle arrecifes 1587' tel: '42387458' dni: '78954127' cod: 01.
cl1:= Cliente crearClienteNom: 'Enzo' dir: 'av. clachaqui 1500 ' tel: '42375429' dni: '7547857' cod: 02.
cl2:= Cliente crearClienteNom: 'Claudio' dir: 'calle neuquen 1987' tel: '42558710' dni: '78945217' cod: 03.
remi agregarCliente: cl.
remi agregarCliente: cl1.
remi agregarCliente: cl2. 

remi inspect.

"1 to: 3 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. "

"1 to: 3 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del cliente: '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente:'.
			t:= Prompter prompt: ' Ingrese el telefono del cliente: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente: '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.
			
			cl:= Cliente crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ]. "

col1:=remi todosLosChoferes.
1 to: col1 size do: [:i| (col1 at: i) verNombre inspect ].!

| op n d t dn co re ch remi client col1|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Imprimir choferes';
cr;
show: ' 4. Imprimir Clientes';
cr;



show: ' 5. Salir'; 
cr.




op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=5] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 2 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 2 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			ch:= Cliente crearClienteNom:n dir: d tel: t dni: dn cod: co reg: re . 
			client agregarCliente: ch ]. ].





(op=2) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. !

| op n d t dn co re ch remi client col1|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Imprimir choferes';
cr;
show: ' 4. Imprimir Clientes';
cr;



show: ' 5. Salir'; 
cr.




op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=5] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 2 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 2 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			ch:= Cliente crearClienteNom:n dir: d tel: t dni: dn cod: co reg: re . 
			client agregarCliente: ch ]. ].





(op=2) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 
!

| op n d t dn co re ch remi client col1|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Imprimir choferes';
cr;
show: ' 4. Imprimir Clientes';
cr;



show: ' 5. Salir'; 
cr.




op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=5] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 2 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 2 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			ch:= Cliente crearClienteNom:n dir: d tel: t dni: dn cod: co reg: re . 
			client agregarCliente: ch ]. ].





(op=2) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. !

| op n d t dn co re ch remi client col1|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Imprimir choferes';
cr;
show: ' 4. Imprimir Clientes';
cr;



show: ' 5. Salir'; 
cr.




op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=5] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 2 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 2 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			ch:= Cliente crearClienteNom:n dir: d tel: t dni: dn cod: co reg: re . 
			client agregarCliente: ch ]. ].





(op=2) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. !

"19:01:08, domingo, 1 de noviembre de 2020: Dolphin Smalltalk Professional started"!

!Persona methodsFor!
iniPersonaNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni
"Inicializa una instancia de persona, sus clases hijos llamaran este metodo"
nombre:=unNombre.
direccion:=unaDireccion.
telefono:=unTelefono.
dni:=unDni.! !
!Persona categoriesFor: #iniPersonaNom:dir:tel:dni:!public! !

!Persona methodsFor!
modiDireccion: unaDir
"Modifica la direccion de una persona"
direccion:=unaDir.! !
!Persona categoriesFor: #modiDireccion:!public! !

!Persona methodsFor!
modiDireccion: unaDir
"Modifica la direccion de una persona"
direccion:=unaDir.! !
!Persona categoriesFor: #modiDireccion:!public! !

!Persona methodsFor!
modiNombre: unNom
"Modifica el nombre de una persona"
nombre:=unNom.! !
!Persona categoriesFor: #modiNombre:!public! !

!Persona methodsFor!
modiTelefono: unTel
"Mofica el telefono"
telefono:=unTel.! !
!Persona categoriesFor: #modiTelefono:!public! !

!Persona methodsFor!
verDireccion
"Retorna la direccion de una persona"
^direccion.! !
!Persona categoriesFor: #verDireccion!public! !

!Persona methodsFor!
verDni
"Retorna el dni de una persona"
^dni.! !
!Persona categoriesFor: #verDni!public! !

!Persona methodsFor!
verNombre
"Retorna el nombre de la persona"
^nombre.! !
!Persona categoriesFor: #verNombre!public! !

!Persona methodsFor!
verTelefono
"Retorna el telefono de una persona"
^telefono.! !
!Persona categoriesFor: #verTelefono!public! !

!Cliente methodsFor!
verCodigoCliente
"Retorna el codigo del cliente"
^codigo_cliente.! !
!Cliente categoriesFor: #verCodigoCliente!public! !

!Cliente methodsFor!
iniClienteNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo
"Inicializa una instancia de cliente"
super iniPersonaNom: unNombre dir: unaDireccion tel: unTelefono dni: unDni.! !
!Cliente categoriesFor: #iniClienteNom:dir:tel:dni:cod:!public! !

!Cliente class methodsFor!
crearClienteNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo
"Retorna una instancia inicializada de cliente"
^(self new) iniClienteNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo.! !
!Cliente class categoriesFor: #crearClienteNom:dir:tel:dni:cod:!public! !

!Chofer methodsFor!
roverCodigo
"Retorna el codigo del chofer"
^codigo.! !
!Chofer categoriesFor: #roverCodigo!public! !

Chofer removeSelector: #roverCodigo ifAbsent: []!

!Chofer methodsFor!
verCodigo
"Retorna el codigo del chofer"
^codigo.! !
!Chofer categoriesFor: #verCodigo!public! !

!Chofer methodsFor!
verDisponibilidad
"Retorna true si el chofer esta disponible"
^disponible.! !
!Chofer categoriesFor: #verDisponibilidad!public! !

!Chofer methodsFor!
verAuto
"Retorna auto"
^auto.! !
!Chofer categoriesFor: #verAuto!public! !

!Chofer methodsFor!
verRegistro
"Retorna el registro del chofer"
^registro.! !
!Chofer categoriesFor: #verRegistro!public! !

!Chofer methodsFor!
modiRegistro: unreg
"Modifica el registro del chofer"
registro:= unreg.! !
!Chofer categoriesFor: #modiRegistro:!public! !

!Chofer methodsFor!
modiDisponibilidad
"Modifica el estado del chofer"
disponible:= disponible not.! !
!Chofer categoriesFor: #modiDisponibilidad!public! !

!Chofer methodsFor!
iniChoferNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo reg:unRegistro
"Crea una instancia de chofer"
super iniPersonaNom: unNombre dir: unaDireccion tel: unTelefono dni: unDni.
codigo:=unCodigo.
registro:=unRegistro.
disponible:=true.! !
!Chofer categoriesFor: #iniChoferNom:dir:tel:dni:cod:reg:!public! !

!Chofer methodsFor!
agregarAuto: unAuto
"Agrega o modifica un auto al chofer"
auto:=unAuto.! !
!Chofer categoriesFor: #agregarAuto:!public! !

!Chofer class methodsFor!
crearChoferNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo reg:unRegistro
"Retorna una instancia de chofer inicializada"
^(self new) iniChoferNom: unNombre dir:unaDireccion tel: unTelefono dni: unDni cod:unCodigo reg:unRegistro.! !
!Chofer class categoriesFor: #crearChoferNom:dir:tel:dni:cod:reg:!public! !

"19:11:35, domingo, 1 de noviembre de 2020: Image saved"!

"19:11:37, domingo, 1 de noviembre de 2020: Image saved"!

!Remiseria methodsFor!
todosLosChoferes
"Retorna la lista de los choferes"
^lista_chofer.! !
!Remiseria categoriesFor: #todosLosChoferes!public! !

!Remiseria methodsFor!
todosLosClientes
"Retorna la lista de clientes"
^lista_clientes.! !
!Remiseria categoriesFor: #todosLosClientes!public! !

"19:12:47, domingo, 1 de noviembre de 2020: Image saved"!

"19:12:48, domingo, 1 de noviembre de 2020: Image saved"!

| op n d t dn co re ch remi col1|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Imprimir choferes';
cr;
show: ' 4. Imprimir Clientes';
cr;



show: ' 5. Salir'; 
cr.




op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=5] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 2 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 2 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].





(op=2) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 

!

| op n d t dn co re ch remi col1|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Imprimir choferes';
cr;
show: ' 4. Imprimir Clientes';
cr;



show: ' 5. Salir'; 
cr.




op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=5] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].





(op=2) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 
!

"19:16:18, domingo, 1 de noviembre de 2020: Image saved"!

| op n d t dn co re ch remi client col1 col2|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Imprimir choferes';
cr;
show: ' 4. Imprimir Clientes';
cr;



show: ' 5. Salir'; 
cr.




op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=5] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			ch:= client crearClienteNom: n dir: d tel: t dni: dn cod: co .
			client agregarCliente: ch ]. ].





(op=3) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].

(op=4) ifTrue: [ col2:=client todosLosClientes .
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. 


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. ].
!

"19:19:34, domingo, 1 de noviembre de 2020: Image saved"!

"19:19:36, domingo, 1 de noviembre de 2020: Image saved"!

"19:21:59, domingo, 1 de noviembre de 2020: Dolphin Smalltalk Professional started"!

| op n d t dn co re ch remi client col1 col2|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Imprimir choferes';
cr;
show: ' 4. Imprimir Clientes';
cr;



show: ' 5. Salir'; 
cr.




op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=5] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			ch:= client crearClienteNom: n dir: d tel: t dni: dn cod: co .
			client agregarCliente: ch ]. ].





(op=3) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].

(op=4) ifTrue: [ col2:=client todosLosClientes .
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. 


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. ].!

"19:25:37, domingo, 1 de noviembre de 2020: Dolphin Smalltalk Professional started"!

| op n d t dn co re ch remi client col1 col2|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Imprimir choferes';
cr;
show: ' 4. Imprimir Clientes';
cr;



show: ' 5. Salir'; 
cr.




op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=5] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].





(op=3) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].

(op=4) ifTrue: [ col2:=client todosLosClientes .
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. 


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. ].!

"19:27:02, domingo, 1 de noviembre de 2020: Dolphin Smalltalk Professional started"!

| op n d t dn co re ch remi client col1 col2|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Imprimir choferes';
cr;
show: ' 4. Imprimir Clientes';
cr;



show: ' 5. Salir'; 
cr.




op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=5] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			ch:= client crearClienteNom: n dir: d tel: t dni: dn cod: co .
			client agregarCliente: ch ]. ].





(op=3) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].

(op=4) ifTrue: [ col2:=client todosLosClientes .
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. 


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. ].
!

| op n d t dn co re ch remi client col1 col2|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Imprimir choferes';
cr;
show: ' 4. Imprimir Clientes';
cr;



show: ' 5. Salir'; 
cr.




op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=5] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			ch:= client crearClienteNom: n dir: d tel: t dni: dn cod: co .
			client agregarCliente: ch ]. ].





(op=3) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].

(op=4) ifTrue: [ col2:=client todosLosClientes .
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. 


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. ].
!

"19:28:29, domingo, 1 de noviembre de 2020: Dolphin Smalltalk Professional started"!

| op n d t dn co re ch cl remi client col1 col2|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Imprimir choferes';
cr;
show: ' 4. Imprimir Clientes';
cr;



show: ' 5. Salir'; 
cr.




op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=5] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			cl:= Cliente crearClienteNom: n dir: d tel: t dni: dn cod: co .
			client agregarCliente: ch ]. ].





(op=3) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].

(op=4) ifTrue: [ col2:=client todosLosClientes .
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. 


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. ].
!

"19:30:02, domingo, 1 de noviembre de 2020: Dolphin Smalltalk Professional started"!

"19:31:28, domingo, 1 de noviembre de 2020: Image saved"!

| op n d t dn co re ch remi cl client col1 col2|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Imprimir choferes';
cr;
show: ' 4. Imprimir Clientes';
cr;



show: ' 5. Salir'; 
cr.




op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=5] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 2 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 2 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			cl:= Cliente crearClienteNom: n dir: d tel: t dni: dn cod: co .
			client agregarCliente: cl ]. ].





(op=3) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].

(op=4) ifTrue: [ col2:=client todosLosClientes .
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. 


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. ].!

| op n d t dn co re ch remi cl client col1 col2|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Imprimir choferes';
cr;
show: ' 4. Imprimir Clientes';
cr;



show: ' 5. Salir'; 
cr.




op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=5] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 2 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 2 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			cl:= Cliente crearClienteNom: n dir: d tel: t dni: dn cod: co .
			client agregarCliente: cl ]. ].





(op=3) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].

(op=4) ifTrue: [ col2:=client todosLosClientes .
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. 


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. ].

!

| op n d t dn co re ch remi cl client col1 col2|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Imprimir choferes';
cr;
show: ' 4. Imprimir Clientes';
cr;



show: ' 5. Salir'; 
cr.




op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=5] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 2 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			cl:= Cliente crearClienteNom: n dir: d tel: t dni: dn cod: co .
			client agregarCliente: cl ]. ].





(op=3) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].

(op=4) ifTrue: [ col2:=client todosLosClientes .
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. 


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. ].

!

!Remiseria methodsFor!
agregarChofer: unChofer
"Agrega un chofer a la remiseria"
lista_chofer add: unChofer.! !
!Remiseria categoriesFor: #agregarChofer:!public! !

!Remiseria methodsFor!
agregarCliente: unCliente
"Agrega un cliente a la remiseria"
lista_clientes add: unCliente.! !
!Remiseria categoriesFor: #agregarCliente:!public! !

"19:34:24, domingo, 1 de noviembre de 2020: Image saved"!

| op n d t dn co re ch remi cl client col1 col2|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Imprimir choferes';
cr;
show: ' 4. Imprimir Clientes';
cr;



show: ' 5. Salir'; 
cr.




op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=5] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 2 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			cl:= Cliente crearClienteNom: n dir: d tel: t dni: dn cod: co .
			client agregarCliente: cl ]. ].





(op=3) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].

(op=4) ifTrue: [ col2:=client todosLosClientes .
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. 


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. ].

!

"19:35:23, domingo, 1 de noviembre de 2020: Image saved"!

| op n d t dn co re ch remi cl client col1 col2|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Imprimir choferes';
cr;
show: ' 4. Imprimir Clientes';
cr;



show: ' 5. Salir'; 
cr.




op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=5] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 2 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			cl:= Cliente crearClienteNom: n dir: d tel: t dni: dn cod: co .
			client agregarCliente: cl ]. ].





(op=3) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].

(op=4) ifTrue: [ col2:=client todosLosClientes .
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. 


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. ].

!

| op n d t dn co re ch remi cl client col1 col2|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Imprimir choferes';
cr;
show: ' 4. Imprimir Clientes';
cr;



show: ' 5. Salir'; 
cr.




op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=5] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 2 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			cl:= Cliente crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ]. ].





(op=3) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].

(op=4) ifTrue: [ col2:=client todosLosClientes .
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. 


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. ].

!

"19:37:21, domingo, 1 de noviembre de 2020: Dolphin Smalltalk Professional started"!

| op n d t dn co re ch remi cl client col1 col2|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Imprimir choferes';
cr;
show: ' 4. Imprimir Clientes';
cr;



show: ' 5. Salir'; 
cr.



op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=3] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 2 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].
(op=2) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. !

| op n d t dn co re ch remi cl client col1 col2|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Imprimir choferes';
cr;
show: ' 4. Imprimir Clientes';
cr;



show: ' 5. Salir'; 
cr.



op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=3] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].
(op=2) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].
op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. !

| op n d t dn co re ch remi cl client col1 col2|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Imprimir choferes';
cr;
show: ' 4. Imprimir Clientes';
cr;



show: ' 5. Salir'; 
cr.




op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=5] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 21do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			cl:= Cliente crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ]. ].].





(op=3) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].

(op=4) ifTrue: [ col2:=client todosLosClientes .
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. 


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 
!

"19:42:22, domingo, 1 de noviembre de 2020: Dolphin Smalltalk Professional started"!

| op n d t dn co re ch remi cl client col1 col2|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Imprimir choferes';
cr;
show: ' 4. Imprimir Clientes';
cr;



show: ' 5. Salir'; 
cr.




op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=5] whileTrue: [ 


(op=2) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			cl:= Cliente crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ]. ].





(op=3) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].

(op=4) ifTrue: [ col2:=client todosLosClientes .
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. 


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. ].!

"19:43:42, domingo, 1 de noviembre de 2020: Dolphin Smalltalk Professional started"!

| op n d t dn co re ch remi cl client col1 col2|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Imprimir choferes';
cr;
show: ' 4. Imprimir Clientes';
cr;



show: ' 5. Salir'; 
cr.




op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=5] whileTrue: [ 


(op=2) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			cl:= Cliente crearClienteNom: n dir: d tel: t dni: dn cod: co .
			client agregarCliente: cl ]. ].





(op=3) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].

(op=4) ifTrue: [ col2:=client todosLosClientes .
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. 


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. ].

!

"19:45:05, domingo, 1 de noviembre de 2020: Dolphin Smalltalk Professional started"!

| op n d t dn co re ch remi cl client col1 col2|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Imprimir choferes';
cr;
show: ' 4. Imprimir Clientes';
cr;



show: ' 5. Salir'; 
cr.




op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=5] whileTrue: [ 

(op=2) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			cl:= Cliente crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ].  ].





(op=3) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].

(op=4) ifTrue: [ col2:=client todosLosClientes .
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ].  ].


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. !

| op n d t dn co re ch remi cl client col1 col2|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Imprimir choferes';
cr;
show: ' 4. Imprimir Clientes';
cr;



show: ' 5. Salir'; 
cr.




op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=5] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 2 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			cl:= Cliente crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ]. ].





(op=3) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].

(op=4) ifTrue: [ col2:=client todosLosClientes .
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. ]. 


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 

!

| op n d t dn co re ch remi cl client col1 col2|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Imprimir choferes';
cr;
show: ' 4. Imprimir Clientes';
cr;



show: ' 5. Salir'; 
cr.




op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=5] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 2 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			cl:= Cliente crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ]. ].





(op=3) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].

(op=4) ifTrue: [ col2:=remi todosLosClientes .
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. ]. 


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 

!

| op n d t dn co re ch remi cl client col1 col2|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Imprimir choferes';
cr;
show: ' 4. Imprimir Clientes';
cr;



show: ' 5. Salir'; 
cr.




op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=5] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 2 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			cl:= Cliente crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ]. ].





(op=3) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].

(op=4) ifTrue: [ col2:=remi todosLosClientes .
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. ]. 


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 

!


alq:= Dictionary new.
alq at:  'herramienta de corte' put: 'amoladora' .
alq at: 'herramienta de impacto' put: 'martillo'.
alq at: 'herramienta de viento' put: 'soplador electrico'.
alq at: 'herramienta de perforacion' put: 'Agujereadora'.

"le pido al diccionario un elemento"
alq at: 'herramienta de impacto'.
alq at: 'herramienta de perforacion' ifAbsent:['no se'].
alq at: 'herramienta de deteccion electrico' ifAbsent:['no se'].

"pedir al diccionario cosas de collection"
alq size.
alq includes: 'herramienta de imapcto'.
alq includes: 'martillo'.
alq select: [:p | p size = 4].!


alq:= Dictionary new.
alq at:  'herramienta de corte' put: 'amoladora' .
alq at: 'herramienta de impacto' put: 'martillo'.
alq at: 'herramienta de viento' put: 'soplador electrico'.
alq at: 'herramienta de perforacion' put: 'Agujereadora'.

"le pido al diccionario un elemento"
alq at: 'herramienta de impacto'.
alq at: 'herramienta de perforacion' ifAbsent:['no se'].
alq at: 'herramienta de deteccion electrico' ifAbsent:['no se'].

"pedir al diccionario cosas de collection"
alq size.
alq includes: 'herramienta de imapcto'.
alq includes: 'martillo'.
alq select: [:p | p size = 4].

!

alq:= Dictionary new.
alq at:  'herramienta de corte' put: 'amoladora' .
alq at: 'herramienta de impacto' put: 'martillo'.
alq at: 'herramienta de viento' put: 'soplador electrico'.
alq at: 'herramienta de perforacion' put: 'Agujereadora'.

"le pido al diccionario un elemento"
alq at: 'herramienta de impacto'.
alq at: 'herramienta de perforacion' ifAbsent:['no se'].
alq at: 'herramienta de deteccion electrico' ifAbsent:['no se'].

"pedir al diccionario cosas de collection"
alq size.
alq includes: 'herramienta de imapcto'.
alq includes: 'martillo'.
alq select: [:p | p size = 4].!


alq:= Dictionary new.
alq at:  'herramienta de corte' put: 'amoladora' .
alq at: 'herramienta de impacto' put: 'martillo'.
alq at: 'herramienta de viento' put: 'soplador electrico'.
alq at: 'herramienta de perforacion' put: 'Agujereadora'.

"le pido al diccionario un elemento"
alq at: 'herramienta de impacto'.
alq at: 'herramienta de perforacion' ifAbsent:['no se'].
alq at: 'herramienta de deteccion electrico' ifAbsent:['no se'].

"pedir al diccionario cosas de collection"
alq size.
alq includes: 'herramienta de imapcto'.
alq includes: 'martillo'.
alq select: [:p | p size = 4].

!

alq:= Dictionary new.
alq at:  'herramienta de corte' put: 'amoladora' .
alq at: 'herramienta de impacto' put: 'martillo'.
alq at: 'herramienta de viento' put: 'soplador electrico'.
alq at: 'herramienta de perforacion' put: 'Agujereadora'.

"le pido al diccionario un elemento"
alq at: 'herramienta de impacto'.
alq at: 'herramienta de perforacion' ifAbsent:['no se'].
alq at: 'herramienta de deteccion electrico' ifAbsent:['no se'].

"pedir al diccionario cosas de collection"
alq size.
alq includes: 'herramienta de imapcto'.
alq includes: 'martillo'.
alq select: [:p | p size = 4].

!

alq:= Dictionary new.
alq at:  'herramienta de corte' put: 'amoladora' .
alq at: 'herramienta de impacto' put: 'martillo'.
alq at: 'herramienta de viento' put: 'soplador electrico'.
alq at: 'herramienta de perforacion' put: 'Agujereadora'.

"le pido al diccionario un elemento"
alq at: 'herramienta de impacto'.
alq at: 'herramienta de perforacion' ifAbsent:['no se'].
alq at: 'herramienta de deteccion electrico' ifAbsent:['no se'].

"pedir al diccionario cosas de collection"
alq size.
alq includes: 'herramienta de imapcto'.
alq includes: 'martillo'.
alq select: [:p | p size = 4].!

alq:= Dictionary new.

"le pido al diccionario un elemento"
alq at: 'herramienta de impacto'.
alq at: 'herramienta de perforacion' ifAbsent:['no se'].
alq at: 'herramienta de deteccion electrico' ifAbsent:['no se'].

"pedir al diccionario cosas de collection"
alq size.
alq includes: 'herramienta de imapcto'.
alq includes: 'martillo'.
alq select: [:p | p size = 4].
!

alq:= Dictionary new.
alq at:  'lunes' put: 'varela' .
alq at: 'martes' put: 'quuilems'.
alq at: 'miercoles' put: 'avellaneda'.
alq at: 'jueves' put: 'berazategui'.

"le pido al diccionario un elemento"
alq at: 'lunes'.
alq at: 'martes' ifAbsent:['no se'].
alq at: 'miercoles' ifAbsent:['no se'].

"pedir al diccionario cosas de collection"
alq size.
alq includes: 'lunes'.
alq includes: 'martes'.
alq select: [:p | p size = 4].

!

|d|
d:= Dictionary new at:'lunes' put: 'Fisica';
at:'martes' put:'Computación';
at:'miércoles' put:'Matemática';
at:'jueves' put:'Computación';
at:'viernes' put:'Matemática';
yourself.
d inspect.!

|d|
d:=Dictionary new at: 'gorrion' put:'pajaro';
at:'olmo' put:'arbol';
at:'golondrina' put:'pajaro';
at: 'sauce' put: 'arbol';
yourself.
rta1:=d at:'golondrina'.
rta2:=d at:'gorrion'.
rta3:=d at:'pavo'.
d at:'fuego' ifAbsent:['no lo se'].
d removeKey:'fuego' ifAbsent:[^nil].

!

|d|
d:=Dictionary new at: 'gorrion' put:'pajaro';
at:'olmo' put:'arbol';
at:'golondrina' put:'pajaro';
at: 'sauce' put: 'arbol';
yourself.
rta1:=d at:'golondrina'.
rta2:=d at:'gorrion'.
rta3:=d at:'pavo'.
d at:'fuego' ifAbsent:['no lo se'].
d removeKey:'fuego' ifAbsent:[^nil].

!

|d|
d:=Dictionary new at: 'gorrion' put:'pajaro';
at:'olmo' put:'arbol';
at:'golondrina' put:'pajaro';
at: 'sauce' put: 'arbol';
yourself.
rta1:=d at:'golondrina'.
rta2:=d at:'gorrion'.

d at:'fuego' ifAbsent:['no lo se'].
d removeKey:'fuego' ifAbsent:[^nil].

!

alq:= Dictionary new.
alq at:  'lunes' put: 'varela' .
alq at: 'martes' put: 'quuilems'.
alq at: 'miercoles' put: 'avellaneda'.
alq at: 'jueves' put: 'berazategui'.
alq at: 'viernes' put:'berazategui'.

"le pido al diccionario un elemento"
alq at: 'lunes'.
alq at: 'martes' ifAbsent:['no se'].
alq at: 'miercoles' ifAbsent:['no se'].

"pedir al diccionario cosas de collection"
alq size.
alq includes: 'lunes'.
alq includes: 'martes'.
alq select: [:p | p size = 4].

!

alq:= Dictionary new.
alq at:  'lunes' put: 'varela' .
alq at: 'martes' put: 'quuilems'.
alq at: 'miercoles' put: 'avellaneda'.
alq at: 'jueves' put: 'berazategui'.
alq at: 'viernes' put:'berazategui';

yourself.

alq inspect
!

"20:28:53, domingo, 1 de noviembre de 2020: Image saved"!

!Remiseria methodsFor!
buscarChofernombre: unNombre

! !
!Remiseria categoriesFor: #buscarChofernombre:!public! !

!Remiseria methodsFor!
buscarChofernombre: unNombre

^lista_chofer detect:[:chofer | chofer verNom =unNombre ] ifNot: [^nil].! !
!Remiseria categoriesFor: #buscarChofernombre:!public! !

!Remiseria methodsFor!
buscarChofernombre: unCodigo

^lista_chofer detect:[:chofer | chofer verCodigo =unCodigo ] ifNone: [^nil].! !
!Remiseria categoriesFor: #buscarChofernombre:!public! !

!Remiseria methodsFor!
buscarchofercod: unCodigo

^lista_chofer detect:[:chofer | chofer verCodigo =unCodigo ] ifNone: [^nil].! !
!Remiseria categoriesFor: #buscarchofercod:!public! !

Remiseria removeSelector: #buscarChofernombre: ifAbsent: []!

!Remiseria methodsFor!
buscarChofercod: unCodigo

^lista_chofer detect:[:chofer | chofer verCodigo =unCodigo ] ifNone: [^nil].! !
!Remiseria categoriesFor: #buscarChofercod:!public! !

Remiseria removeSelector: #buscarchofercod: ifAbsent: []!

"20:40:57, domingo, 1 de noviembre de 2020: Image saved"!

"20:40:57, domingo, 1 de noviembre de 2020: Image saved"!

| alq op n d t dn co re ch remi cl client col1 col2 buscarch|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Imprimir choferes';
cr;
show: ' 4. Imprimir Clientes';
cr;
show: ' 5. Salir'; 
cr.



"alq:= Dictionary new.
alq at:  'lunes' put: 'varela' .
alq at: 'martes' put: 'quuilems'.
alq at: 'miercoles' put: 'avellaneda'.
alq at: 'jueves' put: 'berazategui'.
alq at: 'viernes' put:'berazategui';

yourself.

alq inspect"


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=5] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 2 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			cl:= Cliente crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ]. ].

(op=3) ifTrue: [ 1 to: 1 do: [:i| 
buscarch:=buscarChofercod:=Prompter prompt: 'Ingrese  el codigo del chofer para buscarlo: '.			
buscarch inspect.	].].	
			
			




(op=10) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].

(op=11) ifTrue: [ col2:=remi todosLosClientes .
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. ]. 


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 

!

!Remiseria methodsFor!
buscarChofercod: unCodigo  Nombre:unNombre

^lista_chofer detect:[:chofer | chofer verCodigo =unCodigo | chofer verNombre =unNombre] ifNone: [^nil].! !
!Remiseria categoriesFor: #buscarChofercod:Nombre:!public! !

| alq op n d t dn co re ch remi cl client col1 col2 buscarch|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Imprimir choferes';
cr;
show: ' 4. Imprimir Clientes';
cr;
show: ' 5. Salir'; 
cr.



"alq:= Dictionary new.
alq at:  'lunes' put: 'varela' .
alq at: 'martes' put: 'quuilems'.
alq at: 'miercoles' put: 'avellaneda'.
alq at: 'jueves' put: 'berazategui'.
alq at: 'viernes' put:'berazategui';

yourself.

alq inspect"


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=5] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 2 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			cl:= Cliente crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ]. ].

(op=3) ifTrue: [ 1 to: 1 do: [:i| 
buscarch:=buscarChofercod:=Prompter prompt: 'Ingrese  el codigo del chofer para buscarlo: '.			
buscarch inspect.	].].	
			
			




(op=10) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].

(op=11) ifTrue: [ col2:=remi todosLosClientes .
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. ]. 


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. !

!Remiseria methodsFor!
buscarChofercod: unCodigo  Nombre:unNombre

^lista_chofer detect:[:chofer | chofer verCodigo =unCodigo | chofer verNombre =unNombre] ifNone: [^nil].! !
!Remiseria categoriesFor: #buscarChofercod:Nombre:!public! !

| alq op n d t dn co re ch remi cl client col1 col2 buscarch|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Imprimir choferes';
cr;
show: ' 4. Imprimir Clientes';
cr;
show: ' 5. Salir'; 
cr.



"alq:= Dictionary new.
alq at:  'lunes' put: 'varela' .
alq at: 'martes' put: 'quuilems'.
alq at: 'miercoles' put: 'avellaneda'.
alq at: 'jueves' put: 'berazategui'.
alq at: 'viernes' put:'berazategui';

yourself.

alq inspect"


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=5] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 2 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			cl:= Cliente crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ]. ].

(op=3) ifTrue: [ 1 to: 1 do: [:i| 
buscarch:=buscarChofercod:=Prompter prompt: 'Ingrese  el codigo del chofer para buscarlo: '.			
buscarch inspect.	].].	
			
			




(op=10) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].

(op=11) ifTrue: [ col2:=remi todosLosClientes .
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. ]. 


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 

!

!Remiseria methodsFor!
buscarChofercod: unCodigo 

^lista_chofer detect:[:chofer | chofer verCodigo =unCodigo ] ifNone: [^nil].! !
!Remiseria categoriesFor: #buscarChofercod:!public! !

| alq op n d t dn co re ch remi cl client col1 col2 buscarch|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Imprimir choferes';
cr;
show: ' 4. Imprimir Clientes';
cr;
show: ' 5. Salir'; 
cr.



"alq:= Dictionary new.
alq at:  'lunes' put: 'varela' .
alq at: 'martes' put: 'quuilems'.
alq at: 'miercoles' put: 'avellaneda'.
alq at: 'jueves' put: 'berazategui'.
alq at: 'viernes' put:'berazategui';

yourself.

alq inspect"


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=5] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 2 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			cl:= Cliente crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ]. ].

(op=3) ifTrue: [ 1 to: 1 do: [:i| 
buscarch:=buscarChofercod:=Prompter prompt: 'Ingrese  el codigo del chofer para buscarlo: '.			
buscarch inspect.	].].	
			
			




(op=10) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].

(op=11) ifTrue: [ col2:=remi todosLosClientes .
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. ]. 


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 

!

| alq op n d t dn co re ch remi cl client col1 col2 buscarch|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Imprimir choferes';
cr;
show: ' 4. Imprimir Clientes';
cr;
show: ' 5. Salir'; 
cr.



"alq:= Dictionary new.
alq at:  'lunes' put: 'varela' .
alq at: 'martes' put: 'quuilems'.
alq at: 'miercoles' put: 'avellaneda'.
alq at: 'jueves' put: 'berazategui'.
alq at: 'viernes' put:'berazategui';

yourself.

alq inspect"


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=5] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 2 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			cl:= Cliente crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ]. ].



(op=10) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].

(op=11) ifTrue: [ col2:=remi todosLosClientes .
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. ]. 


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 

buscarch:=buscarChofercod:=Prompter prompt: 'Ingrese  el codigo del chofer para buscarlo: '.			
buscarch inspect.

!

| alq op n d t dn co re ch remi cl client col1 col2 buscarch|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Imprimir choferes';
cr;
show: ' 4. Imprimir Clientes';
cr;
show: ' 5. Salir'; 
cr.



"alq:= Dictionary new.
alq at:  'lunes' put: 'varela' .
alq at: 'martes' put: 'quuilems'.
alq at: 'miercoles' put: 'avellaneda'.
alq at: 'jueves' put: 'berazategui'.
alq at: 'viernes' put:'berazategui';

yourself.

alq inspect"


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=5] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

			buscarch:=buscarChofercod:=Prompter prompt: 'Ingrese  el codigo del chofer para buscarlo: '.			
			buscarch inspect.




(op=2) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			cl:= Cliente crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ]. ].



(op=10) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].

(op=11) ifTrue: [ col2:=remi todosLosClientes .
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. ]. 


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 


!

Remiseria removeSelector: #buscarChofercod: ifAbsent: []!

"22:54:18, domingo, 1 de noviembre de 2020: Dolphin Smalltalk Professional started"!

| alq op n d t dn co re ch remi cl client col1 col2 buscarch|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Imprimir choferes';
cr;
show: ' 4. Imprimir Clientes';
cr;
show: ' 5. Salir'; 
cr.



"alq:= Dictionary new.
alq at:  'lunes' put: 'varela' .
alq at: 'martes' put: 'quuilems'.
alq at: 'miercoles' put: 'avellaneda'.
alq at: 'jueves' put: 'berazategui'.
alq at: 'viernes' put:'berazategui';

yourself.

alq inspect"


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=5] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 2 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			cl:= Cliente crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ]. ].

(op=3) ifTrue: [ 1 to: 1 do: [:i| 
buscarch:=buscarChofercod:=Prompter prompt: 'Ingrese  el codigo del chofer para buscarlo: '.			
buscarch inspect.	].].	
			
			




(op=10) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].

(op=11) ifTrue: [ col2:=remi todosLosClientes .
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. ]. 


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 

!

!Remiseria methodsFor!
buscarChofercod: unCodigo

^lista_chofer detect:[:chofer | chofer verCodigo =unCodigo ] ifNone: ['No se encuentra el chofer'].! !
!Remiseria categoriesFor: #buscarChofercod:!public! !

| alq op n d t dn co re ch remi cl client col1 col2 buscarch|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Imprimir choferes';
cr;
show: ' 4. Imprimir Clientes';
cr;
show: ' 5. Salir'; 
cr.



"alq:= Dictionary new.
alq at:  'lunes' put: 'varela' .
alq at: 'martes' put: 'quuilems'.
alq at: 'miercoles' put: 'avellaneda'.
alq at: 'jueves' put: 'berazategui'.
alq at: 'viernes' put:'berazategui';

yourself.

alq inspect"


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=5] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 2 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			cl:= Cliente crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ]. ].

(op=3) ifTrue: [ 1 to: 1 do: [:i| 
buscarch:=buscarChofercod:=Prompter prompt: 'Ingrese  el codigo del chofer para buscarlo: '.			
buscarch inspect.	].].	
			
			




(op=10) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].

(op=11) ifTrue: [ col2:=remi todosLosClientes .
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. ]. 


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 

!

| alq op n d t dn co re ch remi cl client col1 col2 buscarch|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Imprimir choferes';
cr;
show: ' 4. Imprimir Clientes';
cr;
show: ' 5. Salir'; 
cr.



"alq:= Dictionary new.
alq at:  'lunes' put: 'varela' .
alq at: 'martes' put: 'quuilems'.
alq at: 'miercoles' put: 'avellaneda'.
alq at: 'jueves' put: 'berazategui'.
alq at: 'viernes' put:'berazategui';

yourself.

alq inspect"


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=5] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 2 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			cl:= Cliente crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ]. ].

(op=3) ifTrue: [ 1 to: 1 do: [:i| 
buscarch:=buscarChofercod:=Prompter prompt: 'Ingrese  el codigo del chofer para buscarlo: '.			
buscarch inspect.	].].	
			
			




(op=10) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString;cr ]. ].

(op=11) ifTrue: [ col2:=remi todosLosClientes .
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString;cr ]. ]. 


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 

!

!Remiseria methodsFor!
existeChofer: unChofer

^lista_chofer includes: unChofer.! !
!Remiseria categoriesFor: #existeChofer:!public! !

!Remiseria methodsFor!
existeCliente: unCliente

^lista_clientes includes: unCliente .! !
!Remiseria categoriesFor: #existeCliente:!public! !

!Remiseria methodsFor!
eliminarChofer: unChofer

^lista_chofer remove:unChofer.! !
!Remiseria categoriesFor: #eliminarChofer:!public! !

!Remiseria methodsFor!
eliminarCliente: unCliente

^lista_clientes remove: unCliente.! !
!Remiseria categoriesFor: #eliminarCliente:!public! !

"23:15:07, domingo, 1 de noviembre de 2020: Image saved"!

"23:15:10, domingo, 1 de noviembre de 2020: Image saved"!

"23:15:14, domingo, 1 de noviembre de 2020: Image saved"!

"23:15:30, domingo, 1 de noviembre de 2020: Image saved"!

|b n l is t a e resultado|
n:=Prompter prompt:'Ingrese un nombre'.

b:=Biblioteca crearBiblioNom:n.

1to:2 do:[:i| 
is:=Prompter prompt:'ingrese un isbn'.

t:=Prompter prompt:'Ingrese un título'.

a:=Prompter prompt:'Ingrese un autor'.

e:=Prompter prompt:'Ingrese una editorial'.

l:=Libro crearLibrolsbn:is tit:t aut:a edit:e.
b agregarLibro:l].


resultado:= buscarLibroIsbn:= Prompter prompt: ' Ingrese un isbn del libro para buscarlo'.
resultado inspect.!

| alq op n d t dn co re ch remi cl client col1 col2 buscarch|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Imprimir choferes';
cr;
show: ' 4. Imprimir Clientes';
cr;
show: ' 5. Salir'; 
cr.



"alq:= Dictionary new.
alq at:  'lunes' put: 'varela' .
alq at: 'martes' put: 'quuilems'.
alq at: 'miercoles' put: 'avellaneda'.
alq at: 'jueves' put: 'berazategui'.
alq at: 'viernes' put:'berazategui';

yourself.

alq inspect"


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=5] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 2 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			cl:= Cliente crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ]. ].

(op=3) ifTrue: [ 1 to: 1 do: [:i| 
buscarch:=buscarChofercod:=Prompter prompt: 'Ingrese  el codigo del chofer para buscarlo: '.			
buscarch inspect.].].	
			
			




(op=10) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString verTelefono;cr ]. ].

(op=11) ifTrue: [ col2:=remi todosLosClientes .
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString  verTelefono;cr ]. ]. 


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 

!

| alq op n d t dn co re ch remi cl client col1 col2 buscarch|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Imprimir choferes';
cr;
show: ' 4. Imprimir Clientes';
cr;
show: ' 5. Salir'; 
cr.



"alq:= Dictionary new.
alq at:  'lunes' put: 'varela' .
alq at: 'martes' put: 'quuilems'.
alq at: 'miercoles' put: 'avellaneda'.
alq at: 'jueves' put: 'berazategui'.
alq at: 'viernes' put:'berazategui';

yourself.

alq inspect"


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=5] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			cl:= Cliente crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ]. ].

(op=3) ifTrue: [ 1 to: 1 do: [:i| 
buscarch:=buscarChofercod:=Prompter prompt: 'Ingrese  el codigo del chofer para buscarlo: '.			
buscarch inspect.].].	
			
			




(op=10) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString verTelefono;cr ]. ].

(op=11) ifTrue: [ col2:=remi todosLosClientes .
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString  verTelefono;cr ]. ]. 


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 

!

| alq op n d t dn co re ch remi cl client col1 col2 buscarch|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Imprimir choferes';
cr;
show: ' 4. Imprimir Clientes';
cr;
show: ' 5. Salir'; 
cr.



"alq:= Dictionary new.
alq at:  'lunes' put: 'varela' .
alq at: 'martes' put: 'quuilems'.
alq at: 'miercoles' put: 'avellaneda'.
alq at: 'jueves' put: 'berazategui'.
alq at: 'viernes' put:'berazategui';

yourself.

alq inspect"


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=5] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			cl:= Cliente crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ]. ].

(op=3) ifTrue: [ 1 to: 1 do: [:i| 
buscarch:=buscarChofercod:=Prompter prompt: 'Ingrese  el codigo del chofer para buscarlo: '.			
buscarch inspect.].].	
			
			




(op=10) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString ;cr ]. ].

(op=11) ifTrue: [ col2:=remi todosLosClientes .
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString  ;cr ]. ]. 


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 

!

| alq op n d t dn co re ch remi cl client col1 col2 buscarch|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Imprimir choferes';
cr;
show: ' 4. Imprimir Clientes';
cr;
show: ' 5. Salir'; 
cr.



"alq:= Dictionary new.
alq at:  'lunes' put: 'varela' .
alq at: 'martes' put: 'quuilems'.
alq at: 'miercoles' put: 'avellaneda'.
alq at: 'jueves' put: 'berazategui'.
alq at: 'viernes' put:'berazategui';

yourself.

alq inspect"


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=6] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			cl:= Cliente crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ]. ].

(op=3) ifTrue: [ 1 to: 1 do: [:i| 
buscarch:=buscarChofercod:=Prompter prompt: 'Ingrese  el codigo del chofer para buscarlo: '.			
buscarch inspect.].].	
			
			




(op=4) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString verTelefono;cr ]. ].

(op=5) ifTrue: [ col2:=remi todosLosClientes .
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString  verTelefono;cr ]. ]. 


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 

!

| alq op n d t dn co re ch remi cl client col1 col2 buscarch|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Imprimir choferes';
cr;
show: ' 4. Imprimir Clientes';
cr;
show: ' 5. Salir'; 
cr.



"alq:= Dictionary new.
alq at:  'lunes' put: 'varela' .
alq at: 'martes' put: 'quuilems'.
alq at: 'miercoles' put: 'avellaneda'.
alq at: 'jueves' put: 'berazategui'.
alq at: 'viernes' put:'berazategui';

yourself.

alq inspect"


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=6] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			cl:= Cliente crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ]. ].

(op=3) ifTrue: [ 1 to: 1 do: [:i| 
buscarch:=buscarChofercod:=Prompter prompt: 'Ingrese  el codigo del chofer para buscarlo: '.			
buscarch inspect.].].	
			
			




(op=4) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre verTelefono;cr ]. ].

(op=5) ifTrue: [ col2:=remi todosLosClientes .
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString  verTelefono;cr ]. ]. 


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 

!

| alq op n d t dn co re ch remi cl client col1 col2 buscarch|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Imprimir choferes';
cr;
show: ' 4. Imprimir Clientes';
cr;
show: ' 5. Salir'; 
cr.



"alq:= Dictionary new.
alq at:  'lunes' put: 'varela' .
alq at: 'martes' put: 'quuilems'.
alq at: 'miercoles' put: 'avellaneda'.
alq at: 'jueves' put: 'berazategui'.
alq at: 'viernes' put:'berazategui';

yourself.

alq inspect"


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=6] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			cl:= Cliente crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ]. ].

(op=3) ifTrue: [ 1 to: 1 do: [:i| 
buscarch:=buscarChofercod:=Prompter prompt: 'Ingrese  el codigo del chofer para buscarlo: '.			
buscarch inspect.].].	
			
			




(op=4) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString ;cr ]. 
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verTelefono printString ;cr ]. ].

(op=5) ifTrue: [ col2:=remi todosLosClientes .
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString ;cr ]. ]. 


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 

!

| alq op n d t dn co re ch remi cl client col1 col2 buscarch|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Imprimir choferes';
cr;
show: ' 4. Imprimir Clientes';
cr;
show: ' 5. Salir'; 
cr.



"alq:= Dictionary new.
alq at:  'lunes' put: 'varela' .
alq at: 'martes' put: 'quuilems'.
alq at: 'miercoles' put: 'avellaneda'.
alq at: 'jueves' put: 'berazategui'.
alq at: 'viernes' put:'berazategui';

yourself.

alq inspect"


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=6] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			cl:= Cliente crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ]. ].

(op=3) ifTrue: [ 1 to: 1 do: [:i| 
buscarch:=buscarChofercod:=Prompter prompt: 'Ingrese  el codigo del chofer para buscarlo: '.			
buscarch inspect.].].	
			
			




(op=4) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString ;cr ]. 
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verTelefono printString ;cr ]. ].

(op=5) ifTrue: [ col2:=remi todosLosClientes .
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString ;cr ]. 
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verTelefono printString ;cr ]. ].


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 

!

!Remiseria methodsFor!
buscarChoferNom: unNombre

^lista_chofer detect:[:chofer | chofer verChofer =unNombre ] ifNone: ['No se encuentra el chofer'].! !
!Remiseria categoriesFor: #buscarChoferNom:!public! !

Remiseria removeSelector: #buscarChofercod: ifAbsent: []!

| alq op n d t dn co re ch remi cl client col1 col2 buscarch|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Imprimir choferes';
cr;
show: ' 4. Imprimir Clientes';
cr;
show: ' 5. Salir'; 
cr.



"alq:= Dictionary new.
alq at:  'lunes' put: 'varela' .
alq at: 'martes' put: 'quuilems'.
alq at: 'miercoles' put: 'avellaneda'.
alq at: 'jueves' put: 'berazategui'.
alq at: 'viernes' put:'berazategui';

yourself.

alq inspect"


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=6] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			cl:= Cliente crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ]. ].

(op=3) ifTrue: [ 1 to: 1 do: [:i| 
buscarch:=buscarChoferNom:=Prompter prompt: 'Ingrese  el codigo del chofer para buscarlo: '.			
buscarch inspect.].].	
			
			




(op=4) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString ;cr ]. 
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verTelefono printString ;cr ]. 
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verCodigo_auto printString ;cr ]. ].


(op=5) ifTrue: [ col2:=remi todosLosClientes .
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString ;cr ]. 
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verTelefono printString ;cr ]. 
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verCodigoCliente printString ;cr ]. ].



op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 

!

| alq op n d t dn co re ch remi cl client col1 col2 buscarch|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Imprimir choferes';
cr;
show: ' 4. Imprimir Clientes';
cr;
show: ' 5. Salir'; 
cr.



"alq:= Dictionary new.
alq at:  'lunes' put: 'varela' .
alq at: 'martes' put: 'quuilems'.
alq at: 'miercoles' put: 'avellaneda'.
alq at: 'jueves' put: 'berazategui'.
alq at: 'viernes' put:'berazategui';

yourself.

alq inspect"


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=6] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			cl:= Cliente crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ]. ].


buscarch:=buscarChoferNom:=Prompter prompt: 'Ingrese  el codigo del chofer para buscarlo: '.			
buscarch inspect.
			
			




(op=4) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString ;cr ]. 
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verTelefono printString ;cr ]. 
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verCodigo_auto printString ;cr ]. ].


(op=5) ifTrue: [ col2:=remi todosLosClientes .
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString ;cr ]. 
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verTelefono printString ;cr ]. 
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verCodigoCliente printString ;cr ]. ].



op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 

!

!Remiseria methodsFor!
buscarChoferNom: unCodigo

^lista_chofer detect:[:chofer | chofer verCodigo =unCodigo ] ifNone: ['No se encuentra el chofer'].! !
!Remiseria categoriesFor: #buscarChoferNom:!public! !

| alq op n d t dn co re ch remi cl client col1 col2 buscarch|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Imprimir choferes';
cr;
show: ' 4. Imprimir Clientes';
cr;
show: ' 5. Salir'; 
cr.



"alq:= Dictionary new.
alq at:  'lunes' put: 'varela' .
alq at: 'martes' put: 'quuilems'.
alq at: 'miercoles' put: 'avellaneda'.
alq at: 'jueves' put: 'berazategui'.
alq at: 'viernes' put:'berazategui';

yourself.

alq inspect"


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=6] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			cl:= Cliente crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ]. ].


buscarch:=buscarChoferNom:=Prompter prompt: 'Ingrese  el codigo del chofer para buscarlo: '.			
buscarch inspect.
			
			




(op=4) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString ;cr ]. 
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verTelefono printString ;cr ]. 
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verCodigo_auto printString ;cr ]. ].


(op=5) ifTrue: [ col2:=remi todosLosClientes .
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString ;cr ]. 
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verTelefono printString ;cr ]. 
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verCodigoCliente printString ;cr ]. ].



op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 

!

| alq op n d t dn co re ch remi cl client col1 col2 buscarch|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Imprimir choferes';
cr;
show: ' 4. Imprimir Clientes';
cr;
show: ' 5. Salir'; 
cr.



"alq:= Dictionary new.
alq at:  'lunes' put: 'varela' .
alq at: 'martes' put: 'quuilems'.
alq at: 'miercoles' put: 'avellaneda'.
alq at: 'jueves' put: 'berazategui'.
alq at: 'viernes' put:'berazategui';

yourself.

alq inspect"


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=6] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			cl:= Cliente crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ]. ].


resultado:=Prompter prompt: 'Ingrese  el codigo del chofer para buscarlo: '.
resultado:= remi buscarChoferNom 	.
resultado inspect.
			
			




(op=4) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString ;cr ]. 
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verTelefono printString ;cr ]. 
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verCodigo_auto printString ;cr ]. ].


(op=5) ifTrue: [ col2:=remi todosLosClientes .
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString ;cr ]. 
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verTelefono printString ;cr ]. 
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verCodigoCliente printString ;cr ]. ].



op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 

!

| alq op n d t dn co re ch remi cl client col1 col2 buscarch|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Imprimir choferes';
cr;
show: ' 4. Imprimir Clientes';
cr;
show: ' 5. Salir'; 
cr.



"alq:= Dictionary new.
alq at:  'lunes' put: 'varela' .
alq at: 'martes' put: 'quuilems'.
alq at: 'miercoles' put: 'avellaneda'.
alq at: 'jueves' put: 'berazategui'.
alq at: 'viernes' put:'berazategui';

yourself.

alq inspect"


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=6] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			cl:= Cliente crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ]. ].


resultado:=Prompter prompt: 'Ingrese  el codigo del chofer para buscarlo: '.
resultado:= remi buscarChoferNom:resultado.
resultado inspect.
			
			




(op=4) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString ;cr ]. 
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verTelefono printString ;cr ]. 
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verCodigo_auto printString ;cr ]. ].


(op=5) ifTrue: [ col2:=remi todosLosClientes .
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString ;cr ]. 
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verTelefono printString ;cr ]. 
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verCodigoCliente printString ;cr ]. ].



op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 

!

| alq op n d t dn co re ch remi cl client col1 col2 buscarch|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Imprimir choferes';
cr;
show: ' 4. Imprimir Clientes';
cr;
show: ' 5. Salir'; 
cr.



"alq:= Dictionary new.
alq at:  'lunes' put: 'varela' .
alq at: 'martes' put: 'quuilems'.
alq at: 'miercoles' put: 'avellaneda'.
alq at: 'jueves' put: 'berazategui'.
alq at: 'viernes' put:'berazategui';

yourself.

alq inspect"


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=6] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			cl:= Cliente crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ]. ].


resultado:=Prompter prompt: 'Ingrese  el codigo del chofer para buscarlo: '.
resultado:= remi buscarChoferNom:resultado.
resultado inspect.
			
			

(op=4) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString ;cr ]. 
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verTelefono printString ;cr ]. 
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verCodigo_auto printString ;cr ]. ].


(op=5) ifTrue: [ col2:=remi todosLosClientes .
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString ;cr ]. 
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verTelefono printString ;cr ]. 
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verCodigoCliente printString ;cr ]. ].



op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 

!

"23:51:56, domingo, 1 de noviembre de 2020: Image saved"!

"23:52:01, domingo, 1 de noviembre de 2020: Image saved"!

!Remiseria methodsFor!
buscarChoferCod: unCodigo

^lista_chofer detect:[:chofer | chofer verCodigo =unCodigo ] ifNone: ['No se encuentra el codigo en el sistema ,ingrese otro'].! !
!Remiseria categoriesFor: #buscarChoferCod:!public! !

"23:52:22, domingo, 1 de noviembre de 2020: Image saved"!

!Remiseria methodsFor!
buscarChoferNom: unCodigo

^lista_chofer detect:[:chofer | chofer verCodigo =unCodigo ] ifNone: ['No se encuentra el chofer'].! !
!Remiseria categoriesFor: #buscarChoferNom:!public! !

| alq op n d t dn co re ch remi cl client col1 col2 buscarch|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Buscar choferes';
cr;
show: ' 4. Imprimir Choferes';
cr;
show: ' 5. Imprimir Clientes';
cr;
show: ' 6. Salir'; 
cr.


"alq:= Dictionary new.
alq at:  'lunes' put: 'varela' .
alq at: 'martes' put: 'quuilems'.
alq at: 'miercoles' put: 'avellaneda'.
alq at: 'jueves' put: 'berazategui'.
alq at: 'viernes' put:'berazategui';

yourself.

alq inspect"


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=6] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			cl:= Cliente crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ]. ].

(op=3) ifTrue: [ 1 to: 1 do: [:i| 
resultado:=Prompter prompt: 'Ingrese  el codigo del chofer para buscarlo: '.
resultado:= remi buscarChoferCod:resultado.
resultado inspect.].].
			
			

(op=4) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString ;cr ]. 
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verTelefono printString ;cr ]. 
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verCodigo_auto printString ;cr ]. ].


(op=5) ifTrue: [ col2:=remi todosLosClientes .
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString ;cr ]. 
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verTelefono printString ;cr ]. 
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verCodigoCliente printString ;cr ]. ].



op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 

!

"23:57:33, domingo, 1 de noviembre de 2020: Image saved"!

"23:57:37, domingo, 1 de noviembre de 2020: Image saved"!

| alq op n d t dn co re ch remi cl client col1 col2 buscarch|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Buscar choferes';
cr;
show: ' 4. Imprimir Choferes';
cr;
show: ' 5. Imprimir Clientes';
cr;
show: ' 6. Salir'; 
cr.


"alq:= Dictionary new.
alq at:  'lunes' put: 'varela' .
alq at: 'martes' put: 'quuilems'.
alq at: 'miercoles' put: 'avellaneda'.
alq at: 'jueves' put: 'berazategui'.
alq at: 'viernes' put:'berazategui';

yourself.

alq inspect"


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=6] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			cl:= Cliente crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ]. ].

(op=3) ifTrue: [ 1 to: 1 do: [:i| 
resultado:=Prompter prompt: 'Ingrese  el codigo del chofer para buscarlo: '.
resultado:= remi buscarChoferCod:resultado.
Transcript show: resultado inspect.].].
			
			

(op=4) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString ;cr ]. 
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verTelefono printString ;cr ]. 
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verCodigo_auto printString ;cr ]. ].


(op=5) ifTrue: [ col2:=remi todosLosClientes .
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString ;cr ]. 
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verTelefono printString ;cr ]. 
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verCodigoCliente printString ;cr ]. ].



op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 

!

| alq op n d t dn co re ch remi cl client col1 col2 buscarch|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Buscar choferes';
cr;
show: ' 4. Imprimir Choferes';
cr;
show: ' 5. Imprimir Clientes';
cr;
show: ' 6. Salir'; 
cr.


"alq:= Dictionary new.
alq at:  'lunes' put: 'varela' .
alq at: 'martes' put: 'quuilems'.
alq at: 'miercoles' put: 'avellaneda'.
alq at: 'jueves' put: 'berazategui'.
alq at: 'viernes' put:'berazategui';

yourself.

alq inspect"


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=6] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			cl:= Cliente crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ]. ].

(op=3) ifTrue: [ 1 to: 1 do: [:i| 
Transcript.
resultado:=Prompter prompt: 'Ingrese  el codigo del chofer para buscarlo: '.
resultado:= remi buscarChoferCod:resultado.
  resultado inspect.].].
			
			

(op=4) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString ;cr ]. 
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verTelefono printString ;cr ]. 
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verCodigo_auto printString ;cr ]. ].


(op=5) ifTrue: [ col2:=remi todosLosClientes .
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString ;cr ]. 
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verTelefono printString ;cr ]. 
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verCodigoCliente printString ;cr ]. ].



op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 

!

| alq op n d t dn co re ch remi cl client col1 col2 buscarch|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Buscar choferes';
cr;
show: ' 4. Imprimir Choferes';
cr;
show: ' 5. Imprimir Clientes';
cr;
show: ' 6. Salir'; 
cr.


"alq:= Dictionary new.
alq at:  'lunes' put: 'varela' .
alq at: 'martes' put: 'quuilems'.
alq at: 'miercoles' put: 'avellaneda'.
alq at: 'jueves' put: 'berazategui'.
alq at: 'viernes' put:'berazategui';

yourself.

alq inspect"


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=6] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			cl:= Cliente crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ]. ].

(op=3) ifTrue: [ 1 to: 1 do: [:i| 
Transcript.
resultado:=Prompter prompt: 'Ingrese  el codigo del chofer para buscarlo: '.
resultado:= remi buscarChoferCod:resultado.
  resultado inspect.].].
			
			

(op=4) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString ;cr ]. 
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verTelefono printString ;cr ]. 
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verCodigo_auto printString ;cr ]. ].


(op=5) ifTrue: [ col2:=remi todosLosClientes .
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString ;cr ]. 
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verTelefono printString ;cr ]. 
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verCodigoCliente printString ;cr ]. ].



op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 

!

"00:01:48, lunes, 2 de noviembre de 2020: Image saved"!

| alq op n d t dn co re ch remi cl client col1 col2 buscarch|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Buscar choferes';
cr;
show: ' 4. Imprimir Choferes';
cr;
show: ' 5. Imprimir Clientes';
cr;
show: ' 6. Salir'; 
cr.


"alq:= Dictionary new.
alq at:  'lunes' put: 'varela' .
alq at: 'martes' put: 'quuilems'.
alq at: 'miercoles' put: 'avellaneda'.
alq at: 'jueves' put: 'berazategui'.
alq at: 'viernes' put:'berazategui';

yourself.

alq inspect"


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=6] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			cl:= Cliente crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ]. ].

(op=3) ifTrue: [ 1 to: 1 do: [:i| 
Transcript.
resultado:=Prompter prompt: 'Ingrese  el codigo del chofer para buscarlo: '.
resultado:= remi buscarChoferCod:resultado.
  resultado inspect.].].
			
			

(op=4) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString ;cr ]. 
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verTelefono printString ;cr ]. 
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verCodigo_auto printString ;cr ]. ].


(op=5) ifTrue: [ col2:=remi todosLosClientes .
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString ;cr ]. 
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verTelefono printString ;cr ]. 
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verCodigoCliente printString ;cr ]. ].



op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 

!

| alq op n d t dn co re ch remi cl client col1 col2 buscarch resultado|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Buscar choferes';
cr;
show: ' 4. Imprimir Choferes';
cr;
show: ' 5. Imprimir Clientes';
cr;
show: ' 6. Salir'; 
cr.


"alq:= Dictionary new.
alq at:  'lunes' put: 'varela' .
alq at: 'martes' put: 'quuilems'.
alq at: 'miercoles' put: 'avellaneda'.
alq at: 'jueves' put: 'berazategui'.
alq at: 'viernes' put:'berazategui';

yourself.

alq inspect"


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=6] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			cl:= Cliente crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ]. ].

(op=3) ifTrue: [ 1 to: 1 do: [:i| 
Transcript show:
(resultado:=Prompter prompt: 'Ingrese  el codigo del chofer para buscarlo: ').
resultado:= remi buscarChoferCod:resultado.
  resultado inspect.].].
			
			

(op=4) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString ;cr ]. 
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verTelefono printString ;cr ]. 
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verCodigo_auto printString ;cr ]. ].


(op=5) ifTrue: [ col2:=remi todosLosClientes .
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString ;cr ]. 
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verTelefono printString ;cr ]. 
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verCodigoCliente printString ;cr ]. ].



op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 

!

| alq op n d t dn co re ch remi cl client col1 col2 buscarch resultado|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Buscar choferes';
cr;
show: ' 4. Imprimir Choferes';
cr;
show: ' 5. Imprimir Clientes';
cr;
show: ' 6. Salir'; 
cr.


"alq:= Dictionary new.
alq at:  'lunes' put: 'varela' .
alq at: 'martes' put: 'quuilems'.
alq at: 'miercoles' put: 'avellaneda'.
alq at: 'jueves' put: 'berazategui'.
alq at: 'viernes' put:'berazategui';

yourself.

alq inspect"


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=6] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 1 do: [:i| Transcript show:
( n:= Prompter prompt: 'Ingrese el nombre del chofer: ').
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			cl:= Cliente crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ]. ].

(op=3) ifTrue: [ 1 to: 1 do: [:i| 
Transcript show:
(resultado:=Prompter prompt: 'Ingrese  el codigo del chofer para buscarlo: ').
resultado:= remi buscarChoferCod:resultado.
  resultado inspect.].].
			
			

(op=4) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString ;cr ]. 
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verTelefono printString ;cr ]. 
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verCodigo_auto printString ;cr ]. ].


(op=5) ifTrue: [ col2:=remi todosLosClientes .
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString ;cr ]. 
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verTelefono printString ;cr ]. 
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verCodigoCliente printString ;cr ]. ].



op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 

!

| alq op n d t dn co re ch remi cl client col1 col2 buscarch resultado|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Buscar choferes';
cr;
show: ' 4. Imprimir Choferes';
cr;
show: ' 5. Imprimir Clientes';
cr;
show: ' 6. Salir'; 
cr.


"alq:= Dictionary new.
alq at:  'lunes' put: 'varela' .
alq at: 'martes' put: 'quuilems'.
alq at: 'miercoles' put: 'avellaneda'.
alq at: 'jueves' put: 'berazategui'.
alq at: 'viernes' put:'berazategui';

yourself.

alq inspect"


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=6] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 1 do: [:i| Transcript show:



( n:= Prompter prompt: 'Ingrese el nombre del chofer: ').




			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			cl:= Cliente crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ]. ].

(op=3) ifTrue: [ 1 to: 1 do: [:i| 
Transcript show:
(resultado:=Prompter prompt: 'Ingrese  el codigo del chofer para buscarlo: ').
resultado:= remi buscarChoferCod:resultado.
  resultado inspect.].].
			
			

(op=4) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString ;cr ]. 
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verTelefono printString ;cr ]. 
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verCodigo_auto printString ;cr ]. ].


(op=5) ifTrue: [ col2:=remi todosLosClientes .
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString ;cr ]. 
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verTelefono printString ;cr ]. 
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verCodigoCliente printString ;cr ]. ].



op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 

!

| alq op n d t dn co re ch remi cl client col1 col2 buscarch resultado|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Buscar choferes';
cr;
show: ' 4. Imprimir Choferes';
cr;
show: ' 5. Imprimir Clientes';
cr;
show: ' 6. Salir'; 
cr.


"alq:= Dictionary new.
alq at:  'lunes' put: 'varela' .
alq at: 'martes' put: 'quuilems'.
alq at: 'miercoles' put: 'avellaneda'.
alq at: 'jueves' put: 'berazategui'.
alq at: 'viernes' put:'berazategui';

yourself.

alq inspect"


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=6] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 1 do: [:i| Transcript show: 'Nombre y apellido del chofer buscado es'.


( n:= Prompter prompt: 'Ingrese el nombre del chofer: ').




			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			cl:= Cliente crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ]. ].

(op=3) ifTrue: [ 1 to: 1 do: [:i| 
Transcript show:
(resultado:=Prompter prompt: 'Ingrese  el codigo del chofer para buscarlo: ').
resultado:= remi buscarChoferCod:resultado.
  resultado inspect.].].
			
			

(op=4) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString ;cr ]. 
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verTelefono printString ;cr ]. 
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verCodigo_auto printString ;cr ]. ].


(op=5) ifTrue: [ col2:=remi todosLosClientes .
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString ;cr ]. 
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verTelefono printString ;cr ]. 
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verCodigoCliente printString ;cr ]. ].



op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 

!

| alq op n d t dn co re ch remi cl client col1 col2 buscarch resultado|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Buscar choferes';
cr;
show: ' 4. Imprimir Choferes';
cr;
show: ' 5. Imprimir Clientes';
cr;
show: ' 6. Salir'; 
cr.


"alq:= Dictionary new.
alq at:  'lunes' put: 'varela' .
alq at: 'martes' put: 'quuilems'.
alq at: 'miercoles' put: 'avellaneda'.
alq at: 'jueves' put: 'berazategui'.
alq at: 'viernes' put:'berazategui';

yourself.

alq inspect"


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=6] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 1 do: [:i| Transcript show:
			( n:= Prompter prompt: 'Ingrese el nombre del chofer: ').
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			cl:= Cliente crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ]. ].

(op=3) ifTrue: [ 1 to: 1 do: [:i| 
Transcript show:
(resultado:=Prompter prompt: 'Ingrese  el codigo del chofer para buscarlo: ').
Transcript show: 'Nombre y apellido del chofer buscado es'.
resultado:= remi buscarChoferCod:resultado.
  resultado inspect.].].
			
			

(op=4) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString ;cr ]. 
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verTelefono printString ;cr ]. 
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verCodigo_auto printString ;cr ]. ].


(op=5) ifTrue: [ col2:=remi todosLosClientes .
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString ;cr ]. 
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verTelefono printString ;cr ]. 
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verCodigoCliente printString ;cr ]. ].



op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 

!

| alq op n d t dn co re ch remi cl client col1 col2 buscarch resultado|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Buscar choferes';
cr;
show: ' 4. Imprimir Choferes';
cr;
show: ' 5. Imprimir Clientes';
cr;
show: ' 6. Salir'; 
cr.


"alq:= Dictionary new.
alq at:  'lunes' put: 'varela' .
alq at: 'martes' put: 'quuilems'.
alq at: 'miercoles' put: 'avellaneda'.
alq at: 'jueves' put: 'berazategui'.
alq at: 'viernes' put:'berazategui';

yourself.

alq inspect"


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=6] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 1 do: [:i| Transcript show:
			( n:= Prompter prompt: 'Ingrese el nombre del chofer: ').
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			cl:= Cliente crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ]. ].

(op=3) ifTrue: [ 1 to: 1 do: [:i| 
Transcript show:  'Ingrese  el codigo del chofer para buscarlo: '.
(resultado:=Prompter prompt: 'Ingrese  el codigo del chofer para buscarlo: ').

resultado:= remi buscarChoferCod:resultado.
  resultado inspect.].].
			
			

(op=4) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString ;cr ]. 
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verTelefono printString ;cr ]. 
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verCodigo_auto printString ;cr ]. ].


(op=5) ifTrue: [ col2:=remi todosLosClientes .
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString ;cr ]. 
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verTelefono printString ;cr ]. 
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verCodigoCliente printString ;cr ]. ].



op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 

!

| alq op n d t dn co re ch remi cl client col1 col2 buscarch resultado|

r:= Recepcionista crearRecepcionistaNom: 'maria' dir: 'calle laprida 4857' tel: '47841257' dni: '789456123' cod: 01 hora: '8 a 12'.

a:=Agenda crearAgendaCod: 1.
r agregarAgenda: a. 

remi:= Remiseria crearRemiseriaNom: 'Paraiso' dir: 'calle 1234' unTel: '42558977' unaRep: r.


Transcript clear;
show: ' Remiseria ';
show: remi verNombre printString;
show: ' Direccion: ' printString;
show: remi verDireccion  printString;
show: ' Telefono:  'printString;
show: remi verTelefono printString;
cr.

Transcript show: ' 1. Carga de Choferes';
cr;
show: ' 2. Carga de Clientes';
cr;
show: ' 3. Buscar choferes';
cr;
show: ' 4. Imprimir Choferes';
cr;
show: ' 5. Imprimir Clientes';
cr;
show: ' 6. Salir'; 
cr.


"alq:= Dictionary new.
alq at:  'lunes' put: 'varela' .
alq at: 'martes' put: 'quuilems'.
alq at: 'miercoles' put: 'avellaneda'.
alq at: 'jueves' put: 'berazategui'.
alq at: 'viernes' put:'berazategui';

yourself.

alq inspect"


op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber.
[op ~=6] whileTrue: [ 
(op=1) ifTrue: [ 1 to: 1 do: [:i| 
			n:= Prompter prompt: 'Ingrese el nombre del chofer: '.
			d:= Prompter prompt: 'Ingrese la direccion del chofer:'.
			t:= Prompter prompt: ' Ingrese el telefono del chofer: '.
			dn:= Prompter prompt:  ' Ingrese el DNI del chofer: '.
			co:= Prompter prompt: ' Ingrese el codigo del chofer: '.
			re:= Prompter prompt: ' Ingrese el tipo de registro del chofer: '.
			
			ch:= Chofer crearChoferNom: n dir: d tel: t dni: dn cod: co reg: re . 
			remi agregarChofer: ch ]. ].

(op=2) ifTrue: [ 1 to: 1 do: [:i| n:= Prompter prompt: 'Ingrese el nombre del Cliente '.
			d:= Prompter prompt: 'Ingrese la direccion del cliente: '.
			t:= Prompter prompt: ' Ingrese el telefono del cliente '.
			dn:= Prompter prompt:  ' Ingrese el DNI del cliente '.
			co:= Prompter prompt: ' Ingrese el codigo del cliente: '.

			
			cl:= Cliente crearClienteNom: n dir: d tel: t dni: dn cod: co .
			remi agregarCliente: cl ]. ].

(op=3) ifTrue: [ 1 to: 1 do: [:i| 
Transcript show:  'Ingrese  el codigo del chofer para buscarlo: '.
(resultado:=Prompter prompt: 'Ingrese  el codigo del chofer para buscarlo: ').

resultado:= remi buscarChoferCod:resultado.
  resultado inspect.].].
			
			

(op=4) ifTrue: [ col1:=remi todosLosChoferes.
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verNombre printString ;cr ]. 
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verTelefono printString ;cr ]. 
1 to: col1 size do: [:i|Transcript show: (col1 at: i)  verCodigo_auto printString ;cr ]. ].


(op=5) ifTrue: [ col2:=remi todosLosClientes .
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verNombre printString ;cr ]. 
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verTelefono printString ;cr ]. 
1 to: col2 size do: [:i|Transcript show: (col2 at: i)  verCodigoCliente printString ;cr ]. ].



op:= (Prompter prompt: ' Ingrese una opcion: ') asNumber	]. 

!

"00:21:02, lunes, 2 de noviembre de 2020: Image saved"!

"00:21:08, lunes, 2 de noviembre de 2020: Image saved"!

"00:21:10, lunes, 2 de noviembre de 2020: Image saved"!

"00:21:12, lunes, 2 de noviembre de 2020: Image saved"!

